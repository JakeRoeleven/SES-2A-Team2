[{"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\index.js":"1","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\App.js":"2","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Home.js":"3","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Recommendations.js":"4","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Account.js":"5","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\SubjectCard.js":"6","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\index.js":"7","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\App.js":"8","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Recommendations.js":"9","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Account.js":"10","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Home.js":"11","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\SubjectCard.js":"12","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MenuSystem.js":"13","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Search.js":"14","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\lib\\searchHandler.js":"15","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\AppMenu.js":"16","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\Drawer.js":"17","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\MenuSystem.js":"18","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Search.js":"19","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\lib\\searchHandler.js":"20","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\Drawer.js":"21","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\AppMenu.js":"22","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\AppContext.js":"23","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Favorites.js":"24","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\firebase.js":"25","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\PrivateRoute.js":"26","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\StudentForm.js":"27","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\ForgotPassword.js":"28","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Login.js":"29","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Register.js":"30","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestsCard.js":"31","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\Alert.js":"32","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestSelects.js":"33","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\CompletedCourses.js":"34","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MajorSelect.js":"35","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AdminDash.js":"36","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AddCourse.js":"37","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseGrid.js":"38","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseEditButtons.js":"39","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\EditCourse.js":"40","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\NewStudentRoute.js":"41","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Subject.js":"42"},{"size":228,"mtime":1620196763352,"results":"43","hashOfConfig":"44"},{"size":9836,"mtime":1620873001382,"results":"45","hashOfConfig":"44"},{"size":2215,"mtime":1620196821207,"results":"46","hashOfConfig":"44"},{"size":2874,"mtime":1620365392764,"results":"47","hashOfConfig":"44"},{"size":11875,"mtime":1620364227792,"results":"48","hashOfConfig":"44"},{"size":7989,"mtime":1620871417567,"results":"49","hashOfConfig":"44"},{"size":228,"mtime":1619765333183,"results":"50","hashOfConfig":"51"},{"size":6824,"mtime":1619936939033,"results":"52","hashOfConfig":"51"},{"size":2148,"mtime":1619847359189,"results":"53","hashOfConfig":"51"},{"size":11874,"mtime":1619937144264,"results":"54","hashOfConfig":"51"},{"size":2215,"mtime":1619936939033,"results":"55","hashOfConfig":"51"},{"size":6555,"mtime":1619937142475,"results":"56","hashOfConfig":"51"},{"size":4036,"mtime":1620871622566,"results":"57","hashOfConfig":"44"},{"size":5157,"mtime":1620196763358,"results":"58","hashOfConfig":"44"},{"size":618,"mtime":1620196763353,"results":"59","hashOfConfig":"44"},{"size":1637,"mtime":1620351954810,"results":"60","hashOfConfig":"44"},{"size":2391,"mtime":1620196763350,"results":"61","hashOfConfig":"44"},{"size":4273,"mtime":1619847359147,"results":"62","hashOfConfig":"51"},{"size":5157,"mtime":1619847359155,"results":"63","hashOfConfig":"51"},{"size":618,"mtime":1619847359151,"results":"64","hashOfConfig":"51"},{"size":2391,"mtime":1619847359150,"results":"65","hashOfConfig":"51"},{"size":1535,"mtime":1619847359149,"results":"66","hashOfConfig":"51"},{"size":84,"mtime":1619939505420,"results":"67","hashOfConfig":"44"},{"size":5000,"mtime":1620873646427,"results":"68","hashOfConfig":"44"},{"size":1867,"mtime":1620196763351,"results":"69","hashOfConfig":"44"},{"size":549,"mtime":1620871429012,"results":"70","hashOfConfig":"44"},{"size":6169,"mtime":1620871201102,"results":"71","hashOfConfig":"44"},{"size":1947,"mtime":1620362998485,"results":"72","hashOfConfig":"44"},{"size":2641,"mtime":1620825664201,"results":"73","hashOfConfig":"44"},{"size":3250,"mtime":1620824727661,"results":"74","hashOfConfig":"44"},{"size":3774,"mtime":1620364852838,"results":"75","hashOfConfig":"44"},{"size":682,"mtime":1620196763345,"results":"76","hashOfConfig":"44"},{"size":2059,"mtime":1620196763346,"results":"77","hashOfConfig":"44"},{"size":2638,"mtime":1620369682497,"results":"78","hashOfConfig":"44"},{"size":1345,"mtime":1620196763347,"results":"79","hashOfConfig":"44"},{"size":3984,"mtime":1620351033927,"results":"80","hashOfConfig":"44"},{"size":5872,"mtime":1620367664734,"results":"81","hashOfConfig":"44"},{"size":736,"mtime":1620215590141,"results":"82","hashOfConfig":"44"},{"size":2762,"mtime":1620350907968,"results":"83","hashOfConfig":"44"},{"size":6919,"mtime":1620367737067,"results":"84","hashOfConfig":"44"},{"size":547,"mtime":1620871587690,"results":"85","hashOfConfig":"44"},{"size":1168,"mtime":1620873591342,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1q69lak",{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etfqcq",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"89"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"89"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"89"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\index.js",[],["180","181"],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\App.js",["182","183","184"],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Home.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Recommendations.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Account.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\SubjectCard.js",["185"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    IconButton,\r\n    Chip,\r\n    StepConnector\r\n} from '@material-ui/core';\r\n\r\nimport StarOutline from '@material-ui/icons/StarOutline';\r\nimport Star from '@material-ui/icons/Star';\r\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\n\r\nimport Alert from '../components/Alert';\r\n\r\nfunction SubjectCard(props) {\r\n\r\n    const [code, setCode] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [faculty, setFaculty] = useState('');\r\n    const [displayParagraph, setDisplayParagraph] = useState('');\r\n    const [showFullCard, setShowFullCard] = useState(false);\r\n   \r\n    const [favorite, setFavorite] = useState(false);\r\n    const [complete, setComplete] = useState(false);\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        let favorites = sessionStorage.getItem('favorites');\r\n        if (favorites) setFavorites(favorites)\r\n\r\n        setCode(props.subject._id)\r\n        setTitle(props.subject._id + \" - \" + props.subject.course_name);\r\n        setFaculty(\"Faculty of  \" + props.subject.faculty)\r\n\r\n\r\n        let des = props.subject.description.substring(0, 500).trim();\r\n        let words = des.split(\" \");\r\n        let last = words[words.length - 1]\r\n        des = des.replace(last, \"\");\r\n        des = des.trim();\r\n        setDisplayParagraph(des + '...');\r\n\r\n    }, [setTitle, setFaculty, setDisplayParagraph, props]);\r\n\r\n    const toggleFavorite = async (code) => {\r\n\r\n        let url = `http://localhost:8080/api/student/favorites`\r\n        let id = sessionStorage.getItem('user_id');\r\n    \r\n        if (id && code) {\r\n            await fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    \"subject_code\": code ,\r\n                    \"id\": id\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(async (res) => {\r\n                    if (res.status === 200) {\r\n\r\n\r\n                        setFavorite(!favorite)\r\n                        let fav_res = await res.json()\r\n                        setFavorites(await fav_res)\r\n                        sessionStorage.setItem('favorites', await fav_res)\r\n\r\n                        if (fav_res.includes(code)) setAlertMessage('Set '+ code + ' as favorite');\r\n                        else  setAlertMessage('Removed '+ code + ' as favorite');\r\n                        setShowAlert(true)\r\n\r\n\r\n                    } else {\r\n                        setShowAlert(true)\r\n                        setAlertMessage('Failed to set favorite')\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setShowAlert(true)\r\n                    setAlertMessage('Failed to set favorite')\r\n            });\r\n        } else {\r\n            setShowAlert(true)\r\n            setAlertMessage('Failed to set favorite')\r\n        }\r\n    }\r\n\r\n    const toggleComplete = async (code) => {\r\n\r\n        let url = `http://localhost:8080/api/student/completed`\r\n        let id = sessionStorage.getItem('user_id');\r\n    \r\n        if (id && code) {\r\n            await fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    \"subject_code\": code ,\r\n                    \"id\": id\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(async (res) => {\r\n                    if (res.status === 200) {\r\n                        //props.coursesUpdated()\r\n                        setComplete(!complete)\r\n                        let courses = await res.json()\r\n                        if (courses.includes(code)) setAlertMessage('Added '+ code + ' to courses complete')\r\n                        else setAlertMessage('Removed '+ code + ' to courses complete')\r\n                        setShowAlert(true)\r\n                    } else {\r\n                        setShowAlert(true)\r\n                        setAlertMessage('Failed to set course complete')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setShowAlert(true)\r\n                    setAlertMessage('Failed to set course complete')\r\n            });\r\n        } else {\r\n            setShowAlert(true)\r\n            setAlertMessage('Failed to set course complete')\r\n        }\r\n\r\n    }\r\n\r\n    const FavoriteStar = () => {   \r\n        if (favorites.includes(code)) {\r\n            return <Star style={{ color: '#ffc107' }}/>\r\n        } else {\r\n            return  <StarOutline/>\r\n        }\r\n    }\r\n\r\n    const CompleteCircle = () => {   \r\n        if (complete) {\r\n            return <CheckCircle style={{ color: '#43a047' }}/>\r\n        } else {\r\n            return  <CheckCircleOutline/>\r\n        }\r\n    }\r\n\r\n    const Content = () => {\r\n        if (showFullCard) {\r\n            return   (\r\n                <CardContent style={{paddingLeft: '16px', paddingTop: '0px'}}>  \r\n                    <Chip label={faculty} /> <Chip variant=\"outlined\" label={props.subject.credit_points} />\r\n                    <Typography paragraph style={{ paddingTop: '10px'}}> {props.subject.description} </Typography>\r\n                    <p> Pre-requisites: \r\n                    {props.subject['pre-requisites'].map((req) => (\r\n                        <span> {req} </span>\r\n                    ))}\r\n                    </p>\r\n                    <p> Anti-requisites: \r\n                    {props.subject['anti-requisites'].map((req) => (\r\n                        <span> {req} </span>\r\n                    ))}\r\n                    </p>\r\n                </CardContent>\r\n            )      \r\n        } else {\r\n            return (\r\n                <CardContent style={{paddingLeft: '16px', paddingTop: '0px'}}>  \r\n                    <Chip label={faculty} />\r\n                    <Typography paragraph style={{ paddingTop: '10px'}}> {displayParagraph} </Typography>\r\n                </CardContent>\r\n            ) \r\n        }\r\n    }\r\n\r\n    const ShowMore = () => {\r\n        if (showFullCard) {\r\n            return <Button variant=\"contained\" target=\"_blank\" color=\"primary\" size='small' onClick={()=> setShowFullCard(false)} >Show Less</Button>\r\n        } else {\r\n            return <Button variant=\"contained\" target=\"_blank\" color=\"primary\" size='small' onClick={()=> setShowFullCard(true)} >Learn More</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card elevation={4} style={{marginBottom: \"1%\", overflow: 'visible'}}>\r\n           \r\n           <CardContent style={{display: \"flex\", paddingBottom: '0px'}}>   \r\n               \r\n                <Typography color='textPrimary' style={{padding: '12px', paddingLeft: '0px'}}> {title} </Typography> \r\n\r\n                <IconButton aria-label=\"favorite\" style={{marginLeft: \"auto\"}} onClick={() => toggleComplete(props.subject._id)}>\r\n                    <CompleteCircle/>\r\n                </IconButton>\r\n                \r\n                <IconButton aria-label=\"favorite\" onClick={() => toggleFavorite(props.subject._id)}>\r\n                    <FavoriteStar/>\r\n                </IconButton>\r\n\r\n            </CardContent>\r\n\r\n            <Content />\r\n            \r\n            <CardActions style={{paddingRight: '28px', paddingBottom: '12px'}}>\r\n                <Button variant=\"contained\" style={{ marginLeft: \"auto\"}} target=\"_blank\" size='small'  href={props.subject.link}>Visit Handbook</Button>\r\n                <ShowMore />\r\n            </CardActions>\r\n            <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SubjectCard;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\index.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\App.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Recommendations.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Account.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\SubjectCard.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MenuSystem.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Search.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\lib\\searchHandler.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\AppMenu.js",["186"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from '../../firebase';\r\n\r\n// Material UI Imports\r\nimport { AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction AppMenu(props) {\r\n\r\n    const classes = props.styles;\r\n    let history = useHistory();\r\n\r\n    const handleLogout = async () => {\r\n        await firebase.logout();\r\n        props.setAuthenticated(false)\r\n        history.push(\"/login\");\r\n    } \r\n\r\n\r\n    return (\r\n        <AppBar position=\"fixed\"  className={clsx(classes.appBar, {  [classes.appBarShift]: props.open, })}>\r\n            <Toolbar>\r\n                <img src={window.location.origin + '/small-light-logo.png'} style={{ width: '2vw', marginRight: '10px'}}></img>\r\n                <Typography variant='h6' className={classes.title}>\r\n                    Course Recommender\r\n                </Typography>\r\n                <div style={{marginLeft:'auto'}}>\r\n                    <a href=\"/account\" style={{ color: \"inherit\" }}>\r\n                        <IconButton color=\"inherit\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </a>\r\n                    <IconButton color=\"inherit\" onClick={() => handleLogout()}>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default AppMenu;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\Drawer.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\MenuSystem.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Search.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\lib\\searchHandler.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\Drawer.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\AppMenu.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\AppContext.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Favorites.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\firebase.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\StudentForm.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\ForgotPassword.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Login.js",["187"],"import React, {useState} from 'react';\r\nimport firebase from '../../firebase';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Button, TextField, Typography, Paper} from '@material-ui/core';\r\n\r\nimport Alert from '../../components/Alert';\r\n\r\nfunction Login(props) {\r\n    // Hacky way to override overflow\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    async function login() {\r\n        try {\r\n            await firebase.login(email, password).then(() => {\r\n                props.setAuthenticated(true);\r\n                props.checkUserDetails();\r\n            });\r\n        } catch (error) {\r\n            setAlertMessage(\"Please check your email and password and try again\")\r\n            setShowAlert(true)\r\n        }\r\n    }\r\n\r\n    if (!props.authenticated) {\r\n        return (\r\n            <>\r\n            <div className={'animateBackground'}>\r\n                <div style={{marginTop: '10%', textAlign: 'center'}}>\r\n                    <img src={window.location.origin + '/small-light-logo.png'} style={{width: '15vw', marginRight: '10px'}}></img>\r\n\r\n                    <Paper elevation={24} style={{ padding: '1%', width: '400px', marginLeft: 'auto', marginRight: 'auto', marginTop: '2%'}}>\r\n                        \r\n                        <Typography variant='h5' component='h1' gutterBottom>Course Recommender</Typography>\r\n                        <br />\r\n\r\n                        <TextField fullWidth={true} id='outlined-basic' label='Email' variant='outlined' type='email' onChange={(e) => setEmail(e.target.value)} />\r\n\r\n                        <br />\r\n                        <br />\r\n                        <TextField fullWidth={true} id='outlined-basic' label='Password' variant='outlined' type='password' onChange={(e) => setPassword(e.target.value)} />\r\n\r\n                        <br />\r\n                        <br />\r\n                        <Button variant=\"contained\" color=\"primary\" size='large' onClick={() => login()}> Login </Button>\r\n\r\n                        <br /><br />\r\n                        <a href='/forgot-password'>Forgot Password?</a><br />\r\n                        <a href='/register'> Sign Up </a>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n            </>\r\n        );\r\n    } else {\r\n        return <Redirect to='/home' />;\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Register.js",["188","189"],"import React, { useState } from 'react';\r\nimport firebase from '../../firebase';\r\nimport {Button, TextField, Typography, Paper} from '@material-ui/core';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Alert from '../../components/Alert';\r\n\r\nfunction Register(props) {\r\n\r\n    // Hacky way to override overflow\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    const [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\t\r\n    async function login() {\r\n        try {\r\n            await firebase.login(email, password).then(() => {\r\n                props.setAuthenticated(true);\r\n                props.checkUserDetails();\r\n                props.history.replace('/new/student');\r\n            });\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    async function register() {\r\n        try {\r\n            if (confirmPassword === password) {\r\n                await firebase.register(email, password).then((res)=> {\r\n                    login();\r\n                });\r\n            } else {\r\n                setAlertMessage(\"Passwords do not match!\")\r\n                setShowAlert(true)\r\n            }\r\n        } catch (error) {\r\n            setAlertMessage(error.message)\r\n            setShowAlert(true)\r\n        }\r\n    }\r\n\r\n    console.log(props)\r\n\r\n\r\n    return (\r\n        <div className={'animateBackground'}>\r\n                <div style={{marginTop: '8%', textAlign: 'center'}}>\r\n                    <img src={window.location.origin + '/small-light-logo.png'} style={{width: '15vw', marginRight: '10px'}}></img>\r\n\r\n                    <Paper elevation={24} style={{ padding: '1%', width: '400px', marginLeft: 'auto', marginRight: 'auto', marginTop: '2%'}}>\r\n                        \r\n                        <Typography variant='h5' component='h1' gutterBottom>Course Recommender</Typography>\r\n                        <br />\r\n\r\n                        <TextField fullWidth={true} id='outlined-basic' label='Email' variant='outlined' type='email' onChange={(e) => setEmail(e.target.value)} />\r\n\r\n                        <br />\r\n                        <br />\r\n                        <TextField fullWidth={true} id='outlined-basic' label='Password' variant='outlined' type='password' onChange={(e) => setPassword(e.target.value)} />\r\n                        \r\n                        <br />\r\n                        <br />\r\n                        <TextField fullWidth={true} id='outlined-basic' label='Confirm Password' variant='outlined' type='password' onChange={(e) => setConfirmPassword(e.target.value)} />\r\n\r\n                        <br />\r\n                        <br />\r\n                        <Button variant=\"contained\" color=\"primary\" size='large' onClick={() => register()}> Register </Button>\r\n\r\n                        <br />\r\n\r\n                        <p><a href='/login'> Login </a></p>\r\n                    </Paper>\r\n                </div>\r\n                <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n        </div>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestsCard.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\Alert.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestSelects.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\CompletedCourses.js",["190","191"],"import React, {useState, useEffect, useContext, useCallback} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction CoursesCompleted(props) {\r\n\r\n\t\tconst data = useContext(AppContext);\r\n\r\n\t\tconst [courses, setCourses] = useState([]);\r\n\t\tconst [courseName, setCourseNames] = useState([]);\r\n\t\tconst [subjects, setSubjects] = useState({});\r\n\r\n\t\tconst deleteSubject = (subject_code) => {\r\n\t\t\t\r\n\t\t\t// Delete subject from array\r\n\t\t\tconst index = courses.indexOf(subject_code);\r\n\t\t\tlet new_courses = courses\r\n\t\t\tif (courses.length === 1) {\r\n\t\t\t\tnew_courses = []\r\n\t\t\t} else if (index > -1) {\r\n\t\t\t\tnew_courses = courses.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Make the student object\r\n\t\t\tlet student = {}\r\n\t\t\tstudent['id'] =  sessionStorage.getItem('user_id');\r\n\t\t\tstudent[\"student_data\"] = {}\r\n\t\t\tstudent[\"student_data\"]['name'] = props.student.name;\r\n\t\t\tstudent[\"student_data\"]['degree'] = props.student.degree;\r\n\t\t\tstudent[\"student_data\"]['major'] = props.student.major;\r\n\t\t\tstudent[\"student_data\"]['year'] = props.student.year;\r\n\t\t\tstudent[\"student_data\"]['postgraduate'] = props.student.postgraduate;\r\n\t\t\tstudent[\"student_data\"]['interests'] = props.student.interests;\r\n\t\t\tstudent[\"student_data\"]['courses_completed'] = new_courses;\r\n\r\n\r\n\t\t\tlet url = `http://${process.env.REACT_APP_SERVER}/api/update-student`\r\n\t\t\tif (props.student == null) url = `http://${process.env.REACT_APP_SERVER}/api/new-student`\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify(student),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\talert(\"Details updated\")\r\n\t\t\t\t\t\tsetCourses(new_courses)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst error = JSON.parse(await res.json());\r\n\t\t\t\t\t\talert(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\talert(err)\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tconst findSubjects = useCallback(() => {\r\n\t\t\tsetCourses(props.courses)\r\n\t\t\tlet subject_obj = {};\r\n\t\t\tdata.forEach(elem => {\r\n\t\t\t\tif (courses.includes(elem._id)) {\r\n\t\t\t\t\tsubject_obj[elem._id] = elem\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetSubjects(subject_obj);\t\r\n\t\t}, [courses, data, props.courses]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tfindSubjects()\r\n\t\t}, [findSubjects]);\r\n\r\n\t\tif (courses.length > 0 && Object.keys(subjects).length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\tObject.keys(courses).map((index) => (\r\n\t\t\t\t\t<Chip style={{marginBottom: '10px', marginRight: '0.5%'}} label={courses[index]} onDelete={() => deleteSubject(courses[index])} color=\"primary\" />\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<p>No Courses Completed...</p>\r\n\t\t\t)\r\n\t\t}\r\n \r\n}\r\n\r\nexport default CoursesCompleted;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MajorSelect.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AdminDash.js",["192"],"import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport CourseGrid from './CourseGrid';\r\nimport {AppContext} from '../../AppContext';\r\nimport CourseEditButtons from './CourseEditButtons';\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Alert from '../../components/Alert';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AdminDash() {\r\n    \r\n    let history = useHistory();\r\n\r\n\tconst data = useContext(AppContext);\r\n    const [courses, setCourses] = useState([]);\r\n    const [current, setCurrentSelected] = useState([]);\r\n    const [showDelete, setShowDelete] = useState(true);\r\n\t\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [alertMessage, setAlertMessage] = useState(false)\r\n\r\n    // Convert to a formate useable in the rows\r\n    const dataToRows = useCallback(() => {\r\n        let rows = [];\r\n\r\n        for (let i = 0, length = data.length; i < length; i++) {\r\n            let course = data[i];\r\n            course['id'] = course._id;\r\n            rows[i] = course;\r\n        }\r\n\r\n        setCourses(rows);\r\n    }, [data, setCourses]);\r\n\r\n    // Runs on page load\r\n    useEffect(() => {\r\n        dataToRows();\r\n    }, [dataToRows]);\r\n\r\n    const handleSelected = (grid_selected) => {\r\n        let selected = grid_selected;\r\n        setCurrentSelected(selected);\t\r\n        setShowDelete(true);\r\n    };\r\n\r\n    function handleAdd() {\r\n        history.push(\"/admin/add/course\");\r\n    }\r\n\r\n    function handleEdit() {\r\n        history.push(`/admin/edit/course?id=${current}`);\r\n    }\r\n\r\n    // Delete Functions\r\n    const handleDelete = () => {\r\n\t    setShowDelete(false);\r\n    };\r\n\t\r\n    const confirmDelete = () => {\r\n\r\n\t\t// Remove from courses\r\n\t\tlet rows = [];\r\n        for (let i = 0, length = courses.length; i < length; i++) {\r\n            let course = courses[i];\r\n\t\t\tif (course && !current.includes(course._id)) {\r\n\t\t\t\tcourse['id'] = course._id;\r\n\t\t\t\trows[i] = course;\r\n\t\t\t}\r\n        }\r\n        setCourses(rows);\r\n\r\n\t\t// Post to server\r\n\r\n\t\t// Alert\r\n\t\tsetAlertMessage('Course(s) Deleted')\r\n\t\tsetShowAlert(true);\r\n\r\n        let selected = [];\r\n        setCurrentSelected(selected);\t\r\n\r\n\t    setShowDelete(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <center>\r\n                        <header>\r\n                            <strong>Admin Dashboard</strong>\r\n                        </header>\r\n                    </center>\r\n                </div>\r\n                <br />\r\n\r\n                <div style={{paddingBottom: '10px', textAlign: 'right'}}>\r\n                    <CourseEditButtons current={current} handleDelete={handleDelete} handleAdd={handleAdd} handleEdit={handleEdit}/>\r\n                </div>\r\n\r\n                <br />\r\n                <Card variant='outlined' hidden={showDelete}>\r\n                    <CardContent style={{ paddingTop: '0px', paddingBottom: '0px' }}>\r\n                        <p> Please confirm you wish to delete: </p>\r\n                        <ul>\r\n                            {current.map((code, key) => (\r\n                                <li key={key}> Subject: {code} </li>\r\n                            ))}\r\n                        </ul>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size='small' onClick={() => setShowDelete(true)}>Cancel</Button>\r\n                        <Button size='small' onClick={() => confirmDelete()}>Confirm Delete</Button>\r\n                    </CardActions>\r\n                </Card>\r\n                <br />\r\n\r\n                <CourseGrid rows={courses} handleSelected={handleSelected} />\r\n\r\n\t\t\t\t<Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AddCourse.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseGrid.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseEditButtons.js",["193","194"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: '#3f51b5 !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n\t\tpaddingLeft: '10px !important',\r\n\t\tpaddingRight: '10px !important',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(17, 82, 147) !important',\r\n        },\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#00000042 !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n    },\r\n\tbuttonDelete: {\r\n        backgroundColor: '\t#cb234d !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n    }\r\n}));\r\n\r\nexport default function CourseEditButtons(props) {\r\n    \r\n\tconst [empty, setEmpty] = useState(false);\r\n    const [single, setSingle] = useState(false);\r\n    const [multiple, setMultiple] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let selected = props.current;\r\n\t\tconsole.log(selected.length)\r\n        if (selected.length < 1) {\r\n            setEmpty(true);\r\n\t\t\tsetSingle(false);\r\n\t\t\tsetMultiple(false)\r\n        } else if (selected.length === 1) {\r\n            setSingle(true);\r\n\t\t\tsetEmpty(false);\r\n\t\t\tsetMultiple(false)\r\n        } else {\r\n\t\t\tsetSingle(false);\r\n\t\t\tsetEmpty(false);\r\n\t\t\tsetMultiple(true)\r\n        }\r\n\r\n    }, [props.current]);\r\n\r\n    const classes = useStyles();\r\n\r\n    if (empty) {\r\n        return (\r\n            <>\r\n                <Button className={classes.button} onClick={() => props.handleAdd()}>Add Course</Button>\r\n                <Button className={classes.buttonDisabled} disabled>Delete Course</Button>\r\n            </>\r\n        );\r\n    } else if (single){\r\n        return (\r\n            <>\r\n                <Button className={classes.button} onClick={() => props.handleAdd()}>Add Course</Button>\r\n                <Button className={classes.buttonDelete} onClick={() => props.handleDelete()}>Delete Course</Button>\r\n\t\t\t\t<Button className={classes.button} onClick={() => props.handleEdit()}>Edit Course: {props.current}</Button>\r\n            </>\r\n        );\r\n\t} else {\r\n        return (\r\n            <>\r\n                <Button className={classes.button} onClick={() => props.handleAdd()}>Add Course</Button>\r\n                <Button className={classes.buttonDelete} onClick={() => props.handleDelete()}>Delete Courses</Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\EditCourse.js",["195","196","197"],"import React, {useContext, useEffect, useState} from 'react';\r\n\r\nimport {Grid, Container, CssBaseline, Typography, Card, TextField, Button, FormControl, InputLabel, Select, MenuItem, FormControlLabel} from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Form, Label, StepDescription} from 'semantic-ui-react';\r\nimport MajorSelect from '../../components/MajorSelect';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {AppContext} from '../../AppContext';\r\n\r\n\r\nfunction EditCourse(props) {\r\n\r\n    let history = useHistory();\r\n    const data = useContext(AppContext);\r\n\r\n    const [courseID, setCourseID] = useState('');\r\n    const [courseName, setCourseName] = useState('');\r\n    const [creditPoints, setCreditPoints] = useState('');\r\n    const [postgraduate, setPostgraduate] = useState(false);\r\n    const [faculty, setFaculty] = useState('');\r\n    const [coursePrerequisites, setPre] = useState('');\r\n    const [courseAntirequisites, setAnti] = useState('');\r\n    const [courseDescription, setCourseDescription] = useState('');\r\n\r\n    const editCourse = async () => {\r\n        // fetch(`http://localhost:8080/api/new-subject`, {\r\n        //     crossDomain: true,\r\n        //     mode: 'cors',\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Access-Control-Allow-Origin': '*',\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         id: courseID,\r\n        //         courseData: {\r\n        //             course_name: courseName,\r\n        //             credit_points: creditPoints,\r\n        //             'pre-requisites': coursePrerequisites,\r\n        //             'anti-requisites': courseAntirequisites,\r\n        //             postgraduate: postgraduate,\r\n        //             faculty: faculty,\r\n        //             description: courseDescription,\r\n        //             link: '#',\r\n        //         },\r\n        //     }),\r\n        // })\r\n        //     .then(async (res) => {\r\n        //         let data = await res.json();\r\n        //         console.log(data);\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(err);\r\n        //     });\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let search = props.location.search\r\n\r\n        if (search) {\r\n            let value = search.split('=')[1]\r\n            for (let i = 0, length = data.length; i < length; i++) {\r\n                let course = data[i];\r\n                if (value == course._id) {\r\n                    console.log(course)\r\n                    setCourseID(course._id)\r\n                    setCourseName(course.course_name)\r\n                    setCreditPoints(course.credit_points.replace(/\\D/g,''))\r\n                    setPostgraduate(course.postgraduate)\r\n                    setPre(course['pre-requisites'])\r\n                    setAnti(course['anti-requisites'])\r\n                    setCourseDescription(course.description)\r\n                    setFaculty(course.faculty)\r\n                }\r\n\r\n            }\r\n        } else {\r\n            history.push(\"/admin\");\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Grid container spacing={3} style={{marginBottom: '1%'}}>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant='h5'> Edit A Course </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button style={{float: 'right'}} variant='contained' color='primary' onClick={() => history.push('/admin')}>\r\n                            {' '}\r\n                            Return To Admin Dashboard{' '}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n            <Card style={{padding: '2%', overflow: 'visible'}}>\r\n                <Form>\r\n                    <TextField id='outlined-disabled' label='Course ID' variant='outlined' style={{marginRight: '2%'}} value={courseID} onChange={(e) => setCourseID(e.target.value)} />\r\n\r\n                    <TextField id='outlined-disabled' label='Course Name' variant='outlined' style={{marginRight: '2%'}} value={courseName} onChange={(e) => setCourseName(e.target.value)} />\r\n\r\n                    <FormControl variant='outlined' style={{minWidth: '160px', marginRight: '2%'}}>\r\n                        <InputLabel htmlFor='outlined-age-native-simple'>Credit Points</InputLabel>\r\n                        <Select defaultValue={creditPoints} value={creditPoints} onChange={(e) => setCreditPoints(e.target.value)} label='Degree Year'>\r\n                            <MenuItem value={3}>3</MenuItem>\r\n                            <MenuItem value={4}>4</MenuItem>\r\n                            <MenuItem value={6}>6</MenuItem>\r\n                            <MenuItem value={8}>8</MenuItem>\r\n                            <MenuItem value={12}>12</MenuItem>\r\n                            <MenuItem value={18}>18</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControlLabel control={<Checkbox checked={postgraduate} onChange={() => setPostgraduate(!postgraduate)} />} label='Postgraduate' color=\"primary\"/>\r\n                    \r\n                    <br /><br />\r\n                    <Label style={{  marginBottom: '10px', fontStyle: 'italic' }}>List as comma separated values</Label>\r\n                    <TextField id='outlined-disabled' label='Course Pre-requisites' fullWidth={true} variant='outlined' style={{marginRight: '2%'}} value={coursePrerequisites} onChange={(e) => setPre(e.target.value)} />\r\n\r\n                    <br /><br />\r\n                    <Label style={{  marginBottom: '10px', fontStyle: 'italic' }}>List as comma separated values</Label>\r\n                    <TextField id='outlined-disabled' label='Course Anti-requisites' fullWidth={true} variant='outlined' style={{marginRight: '2%'}} value={courseAntirequisites} onChange={(e) => setAnti(e.target.value)} />\r\n                  \r\n                    <br /><br />\r\n                    <TextField id='outlined-disabled' fullWidth={true} multiline={true} rows=\"5\" label='Course Description' variant='outlined' style={{marginRight: '2%'}} value={courseDescription} onChange={(e) => setCourseDescription(e.target.value)} />\r\n                    \r\n                    <br /> <br />\r\n                    <Label style={{  marginBottom: '10px' }}> Select Faculty </Label>\r\n                    <MajorSelect setMajor={setFaculty} major={faculty} />\r\n\r\n                    <br />\r\n                    <Button style={{float: 'right'}} variant='contained' color='primary' onClick={() => editCourse()}>Edit Course</Button>\r\n                    <br />\r\n                </Form>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditCourse;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\NewStudentRoute.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Subject.js",["198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":2,"column":49,"nodeType":"206","messageId":"207","endLine":2,"endColumn":57},{"ruleId":"204","severity":1,"message":"208","line":41,"column":12,"nodeType":"206","messageId":"207","endLine":41,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":98,"column":8,"nodeType":"211","endLine":98,"endColumn":48,"suggestions":"212"},{"ruleId":"204","severity":1,"message":"213","line":11,"column":5,"nodeType":"206","messageId":"207","endLine":11,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":27,"column":17,"nodeType":"216","endLine":27,"endColumn":122},{"ruleId":"214","severity":1,"message":"215","line":34,"column":21,"nodeType":"216","endLine":34,"endColumn":126},{"ruleId":"204","severity":1,"message":"205","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":17},{"ruleId":"214","severity":1,"message":"215","line":52,"column":21,"nodeType":"216","endLine":52,"endColumn":126},{"ruleId":"204","severity":1,"message":"217","line":10,"column":10,"nodeType":"206","messageId":"207","endLine":10,"endColumn":20},{"ruleId":"204","severity":1,"message":"218","line":10,"column":22,"nodeType":"206","messageId":"207","endLine":10,"endColumn":36},{"ruleId":"204","severity":1,"message":"219","line":2,"column":9,"nodeType":"206","messageId":"207","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"220","line":39,"column":12,"nodeType":"206","messageId":"207","endLine":39,"endColumn":20},{"ruleId":"209","severity":1,"message":"221","line":58,"column":8,"nodeType":"211","endLine":58,"endColumn":23,"suggestions":"222"},{"ruleId":"204","severity":1,"message":"223","line":5,"column":22,"nodeType":"206","messageId":"207","endLine":5,"endColumn":37},{"ruleId":"209","severity":1,"message":"224","line":59,"column":5,"nodeType":"206","endLine":59,"endColumn":14,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":67,"column":27,"nodeType":"228","messageId":"229","endLine":67,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":18,"column":27,"nodeType":"228","messageId":"229","endLine":18,"endColumn":29},{"ruleId":"209","severity":1,"message":"230","line":25,"column":8,"nodeType":"211","endLine":25,"endColumn":14,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'fetchSubjects'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'StepConnector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'courseName' is assigned a value but never used.","'setCourseNames' is assigned a value but never used.","'Link' is defined but never used.","'multiple' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Mutable values like 'props.current' aren't valid dependencies because mutating them doesn't re-render the component.",["235"],"'StepDescription' is defined but never used.","React Hook useEffect contains a call to 'setCourseID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.search, data, history] as a second argument to the useEffect Hook.",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history' and 'props.location.search'. Either include them or remove the dependency array.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [fetchSubjects]",{"range":"246","text":"247"},"Update the dependencies array to be: [props]",{"range":"248","text":"249"},"Add dependencies array: [props.location.search, data, history]",{"range":"250","text":"251"},"Update the dependencies array to be: [data, history, props.location.search]",{"range":"252","text":"253"},[3607,3647],"[fetchSubjects]",[1692,1707],"[props]",[3152,3152],", [props.location.search, data, history]",[798,804],"[data, history, props.location.search]"]