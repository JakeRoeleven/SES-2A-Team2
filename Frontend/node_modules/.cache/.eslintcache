[{"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\index.js":"1","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\App.js":"2","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Home.js":"3","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Recommendations.js":"4","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Account.js":"5","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\SubjectCard.js":"6","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\index.js":"7","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\App.js":"8","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Recommendations.js":"9","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Account.js":"10","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Home.js":"11","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\SubjectCard.js":"12","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MenuSystem.js":"13","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Search.js":"14","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\lib\\searchHandler.js":"15","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\AppMenu.js":"16","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\Drawer.js":"17","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\MenuSystem.js":"18","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Search.js":"19","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\lib\\searchHandler.js":"20","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\Drawer.js":"21","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\AppMenu.js":"22","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\AppContext.js":"23","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Favorites.js":"24","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\firebase.js":"25","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\PrivateRoute.js":"26","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\StudentForm.js":"27","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\ForgotPassword.js":"28","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Login.js":"29","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Register.js":"30","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestsCard.js":"31","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\Alert.js":"32","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestSelects.js":"33","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\CompletedCourses.js":"34","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MajorSelect.js":"35","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AdminDash.js":"36","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AddCourse.js":"37","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseGrid.js":"38","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseEditButtons.js":"39"},{"size":228,"mtime":1620196763352,"results":"40","hashOfConfig":"41"},{"size":7481,"mtime":1620199128444,"results":"42","hashOfConfig":"41"},{"size":2215,"mtime":1620196821207,"results":"43","hashOfConfig":"41"},{"size":2148,"mtime":1620196763358,"results":"44","hashOfConfig":"41"},{"size":11874,"mtime":1620196763354,"results":"45","hashOfConfig":"41"},{"size":6555,"mtime":1620196763349,"results":"46","hashOfConfig":"41"},{"size":228,"mtime":1619765333183,"results":"47","hashOfConfig":"48"},{"size":6824,"mtime":1619936939033,"results":"49","hashOfConfig":"48"},{"size":2148,"mtime":1619847359189,"results":"50","hashOfConfig":"48"},{"size":11874,"mtime":1619937144264,"results":"51","hashOfConfig":"48"},{"size":2215,"mtime":1619936939033,"results":"52","hashOfConfig":"48"},{"size":6555,"mtime":1619937142475,"results":"53","hashOfConfig":"48"},{"size":4936,"mtime":1620199191163,"results":"54","hashOfConfig":"41"},{"size":5157,"mtime":1620196763358,"results":"55","hashOfConfig":"41"},{"size":618,"mtime":1620196763353,"results":"56","hashOfConfig":"41"},{"size":1654,"mtime":1620219929158,"results":"57","hashOfConfig":"41"},{"size":2391,"mtime":1620196763350,"results":"58","hashOfConfig":"41"},{"size":4273,"mtime":1619847359147,"results":"59","hashOfConfig":"48"},{"size":5157,"mtime":1619847359155,"results":"60","hashOfConfig":"48"},{"size":618,"mtime":1619847359151,"results":"61","hashOfConfig":"48"},{"size":2391,"mtime":1619847359150,"results":"62","hashOfConfig":"48"},{"size":1535,"mtime":1619847359149,"results":"63","hashOfConfig":"48"},{"size":84,"mtime":1619939505420,"results":"64","hashOfConfig":"41"},{"size":4136,"mtime":1620196763356,"results":"65","hashOfConfig":"41"},{"size":1867,"mtime":1620196763351,"results":"66","hashOfConfig":"41"},{"size":613,"mtime":1620196763348,"results":"67","hashOfConfig":"41"},{"size":5646,"mtime":1620196763359,"results":"68","hashOfConfig":"41"},{"size":803,"mtime":1620196763354,"results":"69","hashOfConfig":"41"},{"size":1480,"mtime":1620219988063,"results":"70","hashOfConfig":"41"},{"size":1692,"mtime":1620196763355,"results":"71","hashOfConfig":"41"},{"size":3751,"mtime":1620210966532,"results":"72","hashOfConfig":"41"},{"size":682,"mtime":1620196763345,"results":"73","hashOfConfig":"41"},{"size":2059,"mtime":1620196763346,"results":"74","hashOfConfig":"41"},{"size":2633,"mtime":1620196763346,"results":"75","hashOfConfig":"41"},{"size":1345,"mtime":1620196763347,"results":"76","hashOfConfig":"41"},{"size":3835,"mtime":1620219276472,"results":"77","hashOfConfig":"41"},{"size":2099,"mtime":1620196775038,"results":"78","hashOfConfig":"41"},{"size":736,"mtime":1620215590141,"results":"79","hashOfConfig":"41"},{"size":2625,"mtime":1620218503412,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1q69lak",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etfqcq",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\index.js",[],["167","168"],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\App.js",["169"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n// Import Private Route\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n// Import Pages\r\nimport Home from './pages/Home';\r\nimport Recommendations from './pages/Recommendations';\r\nimport NavWrapper from './components/MenuSystem';\r\nimport Search from './pages/Search';\r\nimport Account from './pages/Account';\r\nimport LikedCourses from './pages/Favorites';\r\nimport ForgotPassword from './pages/Auth/ForgotPassword';\r\nimport AdminDash from './pages/AdminComponents/AdminDash';\r\n\r\n// Material UI\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {CircularProgress, Typography} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {AppContext} from './AppContext';\r\n\r\n// Firebase Imports\r\nimport firebase from './firebase';\r\nimport Login from './pages/Auth/Login';\r\nimport Register from './pages/Auth/Register';\r\nimport StudentForm from './pages/StudentForm';\r\n\r\nfunction App() {\r\n\r\n    const [subjects, setSubjects] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\tconst [isAuthenticated, setAuthenticated] = useState(true);\r\n\tconst [signupComplete, setSignupComplete] = useState(true);\r\n\tconst [isAdminPage, setIsAdminPage] = useState(true);\r\n\r\n\t// App Context\r\n\tconst { Provider } = AppContext;\r\n\r\n\tconst checkSignupComplete = useCallback(async(id) => {\r\n\r\n\t\tlet is_admin = false \r\n\r\n\t\tawait fetch(`http://localhost:8080/api/admin/${id}`, {\r\n\t\t\tcrossDomain: true,\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t},\r\n\t\t}).then(async (res) => {\r\n\t\t\tis_admin = await res.json();\r\n\r\n\t\t\tif (is_admin) {\r\n\t\t\t\tconsole.log(\"Admin\")\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tif (!is_admin) {\r\n\t\t\tawait fetch(`http://${process.env.REACT_APP_SERVER}/api/student/signup_complete/${id}`, {\r\n\t\t\t\tcrossDomain: true,\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t\t},\r\n\t\t\t}).then(async (res) => {\r\n\t\t\t\tlet data = await res.json();\r\n\t\t\t\tsetSignupComplete(data);\r\n\t\t\t\tcheckUserDetails(id);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}).then(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst checkAuthenticated = useCallback(async () => {\r\n\t\tif (firebase.getCurrentUsername() == null) {\r\n\t\t\tsetAuthenticated(false);\r\n\t\t\tsetSignupComplete(false);\r\n\t\t\tsetLoading(false)\r\n\t\t} else {\r\n\t\t\tsetAuthenticated(true);\r\n\t\t\tlet user_id = await firebase.getCurrentUser()\r\n\t\t\tif (user_id.X) {\r\n\t\t\t\tlet id = user_id['X']['X'];\r\n\t\t\t\tsessionStorage.setItem('user_id', id);\r\n\t\t\t\tcheckSignupComplete(id)\r\n\t\t\t} \r\n\t\t}\t\t\r\n\t}, [checkSignupComplete]);\r\n\r\n\tasync function checkUserDetails(id) {\r\n\t\t\r\n\t\tawait fetch(`http://${process.env.REACT_APP_SERVER}/api/student/${id}`, {\r\n\t\t\tcrossDomain: true,\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t},\r\n\t\t}).then(async (res) => {\r\n\t\t\tlet data = await res.json();\r\n\t\t\tsessionStorage.setItem('favorites', data.favorite_subjects);\r\n\t\t\tsessionStorage.setItem('courses_completed', data.courses_completed)\r\n\t\t\tsetLoading(false)\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err)\r\n\t\t\tsetLoading(false)\r\n\t\t}).then(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t\t\r\n\r\n\t}\r\n\r\n\tfunction setAuth(val) {\r\n\t\tsetAuthenticated(val);\r\n\t}\r\n\r\n\t// Fetch full subject list from API\r\n\tconst fetchSubjects = useCallback(async () => {\r\n\t\tfetch(`http://${process.env.REACT_APP_SERVER}/api/subjects`, {\r\n\t\t\tcrossDomain: true,\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t},\r\n\t\t}).then(async (res) => {\r\n\t\t\tlet data = await res.json();\r\n\t\t\tsetSubjects(data);\r\n\r\n\t\t\t// Record the current date for local storage\r\n\t\t\tlet currentTime = new Date();\r\n\t\t\tlet cachedTime = currentTime.setHours(currentTime.getHours() + 2);\r\n\r\n\t\t\t// Persist the state in local storage\r\n\t\t\tlocalStorage.setItem('hasLoaded', true)\r\n\t\t\tlocalStorage.setItem('subjects', JSON.stringify(data));\r\n\t\t\tlocalStorage.setItem('cacheTime', cachedTime)\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tsetError(err);\r\n\t\t});\r\n\t}, []);\r\n\r\n    // Check if Firebase is initialized\r\n    useEffect(() => {\r\n\r\n        firebase.isInitialized().then(() => {\r\n\t\t\tcheckAuthenticated();\r\n\t\t});\r\n\r\n\t\tconst hasLoaded = localStorage.getItem('hasLoaded');\r\n\t\tconst subjects = JSON.parse(localStorage.getItem('subjects'));\r\n\t\tconst cachedTime = localStorage.getItem('cacheTime');\r\n\r\n\t\tif (cachedTime < new Date()) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tfetchSubjects();\r\n\t\t} else if (!hasLoaded && typeof subject !== 'undefined' && subjects.length > 10) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tfetchSubjects();\r\n\t\t} else {\r\n\t\t\tsetSubjects(subjects)\r\n\t\t\r\n\t\t}\r\n    }, [fetchSubjects, setSubjects, checkAuthenticated]);\r\n\r\n\tif (loading) {\r\n        return (\r\n            <>\r\n                <Skeleton variant='rect' width={'100%'} height={64} />\r\n                <Container maxWidth={false} className={'loadingContainer'}>\r\n                    <CircularProgress size={50} color={'primary'} />\r\n                    <br /><br />\r\n                    <Typography color='textPrimary'>{'Loading Application'}</Typography>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else if (error) {\r\n        return (\r\n            <>\r\n                <Skeleton variant='rect' width={'100%'} height={64} />\r\n                <Container maxWidth={false} className={'loadingContainer'}>\r\n\t\t\t\t\t<Typography color='textPrimary'>{'Failed to load Application'}</Typography>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else {\r\n\t\treturn ( \r\n\t\t\t<>\r\n\t\t\t\t<Router>\r\n\t\t\t\r\n\t\t\t\t\t<NavWrapper setAuthenticated={setAuthenticated} authenticated={isAuthenticated} signupComplete={signupComplete} isAdminPage={isAdminPage}>\r\n\t\t\t\t\t\t\t<Provider value={subjects}>\r\n\t\t\t\t\t\t\t\t<Switch > \r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={(props) => ( <Login {...props}  authenticated={isAuthenticated} setAuthenticated={setAuth} /> )} />\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/login\" component={(props) => ( <Login {...props}  authenticated={isAuthenticated} setAuthenticated={setAuth} /> )} />\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/new/student\" component={StudentForm} />\r\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/admin\" component={AdminDash} />\r\n\t\t\t\t\t\t\t\t\t<PrivateRoute signupComplete={signupComplete} authenticated={isAuthenticated} exact path=\"/home\" component={Home} />\r\n\t\t\t\t\t\t\t\t\t<PrivateRoute signupComplete={signupComplete} authenticated={isAuthenticated} exact path=\"/recommendations\" component={Recommendations} />\r\n\t\t\t\t\t\t\t\t\t<PrivateRoute signupComplete={signupComplete} authenticated={isAuthenticated} exact path=\"/search\" component={Search} />\r\n\t\t\t\t\t\t\t\t\t<PrivateRoute signupComplete={signupComplete} authenticated={isAuthenticated} exact path=\"/account\" component={Account} /> \r\n\t\t\t\t\t\t\t\t\t<PrivateRoute signupComplete={signupComplete} authenticated={isAuthenticated} exact path=\"/favorites\" component={LikedCourses} /> \r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t</Provider>\r\n\t\t\t\t\t\t</NavWrapper>\r\n\t\t\t\t</Router>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Home.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Recommendations.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Account.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\SubjectCard.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\index.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\App.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Recommendations.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Account.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\SubjectCard.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MenuSystem.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Search.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\lib\\searchHandler.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\AppMenu.js",["170"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from '../../firebase';\r\n\r\n// Material UI Imports\r\nimport { AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction AppMenu(props) {\r\n\r\n    const classes = props.styles;\r\n    let history = useHistory();\r\n\r\n    const handleLogout = async () => {\r\n        await firebase.logout();\r\n        props.setAuthenticated(false)\r\n        debugger;\r\n        history.push(\"/login\");\r\n    } \r\n\r\n\r\n    return (\r\n        <AppBar position=\"fixed\"  className={clsx(classes.appBar, {  [classes.appBarShift]: props.open, })}>\r\n            <Toolbar>\r\n                <img src={window.location.origin + '/small-light-logo.png'} style={{ width: '2vw', marginRight: '10px'}}></img>\r\n                <Typography variant='h6' className={classes.title}>\r\n                    Course Recommender\r\n                </Typography>\r\n                <div style={{marginLeft:'auto'}}>\r\n                    <a href=\"/account\" style={{ color: \"inherit\" }}>\r\n                        <IconButton color=\"inherit\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </a>\r\n                    <IconButton color=\"inherit\" onClick={() => handleLogout}>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default AppMenu;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\menus\\Drawer.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\MenuSystem.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\pages\\Search.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\lib\\searchHandler.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\Drawer.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\frontend\\src\\components\\menus\\AppMenu.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\AppContext.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Favorites.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\firebase.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\PrivateRoute.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\StudentForm.js",["171"],"import React, {Component} from 'react';\r\nimport {Form, Segment} from 'semantic-ui-react';\r\nimport {Button, TextField, Container, Grid, Typography} from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport InterestSelect from '../components/InterestSelects';\r\nimport MajorSelect from '../components/MajorSelect';\r\n\r\nconst degreeYearOptions = [\r\n    {value: '1', label: '1'},\r\n    {value: '2', label: '2'},\r\n    {value: '3', label: '3'},\r\n    {value: '4', label: '4'},\r\n    {value: '5', label: '5'},\r\n    {value: '6', label: '6'},\r\n];\r\n\r\nclass StudentForm extends Component {\r\n    // TODO: Postgrad, DEgree Name, Redirect if already have details, for validation\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            major: '',\r\n            degree: '',\r\n            yearOfDegree: '',\r\n            current_interests: [],\r\n            displayed_interests: [],\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    handleSelectInputChange = async (event, select) => {\r\n        let name = select.name;\r\n        let value = event.value;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    setCurrentInterests = (value) => {\r\n        this.setState({current_interests: value});\r\n    };\r\n\r\n    setMajor = (value) => {\r\n        this.setState({major: value});\r\n    };\r\n\r\n    setDisplayedInterests = (value) => {\r\n        this.setState({displayed_interests: value});\r\n    };\r\n\r\n    getStudentData = () => {\r\n       \r\n        let student = {};\r\n\r\n        // TODO use Clalabakc to fix this???\r\n        let id = sessionStorage.getItem('user_id');\r\n\r\n        // Push id from firebase\r\n        student['id'] = id;\r\n\r\n        student['student_data'] = {};\r\n        student['student_data']['name'] = this.state.firstname.concat(' ').concat(this.state.lastname);\r\n\r\n        //TODO: Need degree\r\n        student['student_data']['degree'] = this.state.degree;\r\n        student['student_data']['major'] = this.state.major;\r\n        student['student_data']['year'] = this.state.yearOfDegree;\r\n        student['student_data']['postgraduate'] = false;\r\n        student['student_data']['interests'] = this.state.current_interests;\r\n\r\n        return student;\r\n    };\r\n\r\n    onSubmit = async (event) => {\r\n        let student = this.getStudentData();\r\n        this.setState({loading: true});\r\n        event.preventDefault();\r\n        fetch('http://${process.env.REACT_APP_SERVER}/api/new-student', {\r\n        \tmethod: 'POST',\r\n        \tbody: JSON.stringify(student),\r\n        \theaders: {\r\n        \t\t'Content-Type': 'application/json'\r\n        \t}\r\n        })\r\n            .then(async (res) => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/recommendations');\r\n                } else {\r\n                    const error = JSON.parse(await res.json());\r\n                    alert(error);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Segment color='blue' padded textAlign='center'>\r\n                <br />\r\n                {/* <Message\r\n                    hidden={this.state.hidden}\r\n                    error\r\n                    header={this.state.errorHeading}\r\n                    content={this.state.errorMessage}\r\n                /> */}\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'> Setup Your Account To Begin </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Form size='large' onSubmit={this.onSubmit}>\r\n\r\n                        <br />\r\n                        <TextField name='firstname' required minLength='3' maxLength='20' fluid icon='user' iconPosition='left' placeholder='First Name' value={this.state.firstname} onChange={this.handleInputChange} />\r\n                        <TextField name='lastname' required minLength='3' maxLength='20' fluid icon='user' iconPosition='left' placeholder='Last Name' value={this.state.lastname} onChange={this.handleInputChange} />\r\n\r\n                        <br /><br />\r\n                        <TextField name='degree' required minLength='3' maxLength='200' fluid icon='paper' iconPosition='left' placeholder='Degree' value={this.state.degree} onChange={this.handleInputChange} />\r\n\r\n                        <br /><br />\r\n                        <Select type='yearOfDegree' name='yearOfDegree' required options={degreeYearOptions} defaultValue={this.state.yearOfDegree} placeholder={'Select Year Of Study'} onChange={this.handleSelectInputChange} />\r\n                        \r\n                        <br />\r\n                        <MajorSelect setMajor={this.setMajor} />\r\n                        \r\n                        <br />\r\n                        <InterestSelect displayed_interests={this.state.displayed_interests} setCurrentInterests={this.setCurrentInterests} setDisplayedInterests={this.setDisplayedInterests} />\r\n                        \r\n                        <br />\r\n                        <Button loading={this.state.loading} type='submit' value='Submit' color='blue' fluid size='large' style={{float: 'right'}}>\r\n                            Create Account\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentForm;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\ForgotPassword.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Login.js",["172"],"import React, { useState } from 'react';\r\nimport firebase from '../../firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Login(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\t\r\n    async function login() {\r\n        try {\r\n            await firebase.login(email, password).then(()=> {\r\n                props.setAuthenticated(true);\r\n            });\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    if (!props.authenticated) {\r\n        return (\r\n            <div style={{padding: '2%'}}>\r\n                <center>\r\n                <img src={window.location.origin + '/course-logo.png'} style={{ width: '10vw', marginRight: '10px'}}></img>\r\n                <h3>Login to Course Recommender</h3>\r\n                <input type='email' placeholder='Email...' id='email_field'  onChange={(e) => setEmail(e.target.value)}/><br /><br />\r\n                <input type='password' placeholder='Password...' id='password_field'  onChange={(e) => setPassword(e.target.value)}/><br /><br />\r\n                <button onClick={() => login()}>Login to Account</button><br />  \r\n                <p> <a href=\"/forgot-password\" > Forgot Password? </a></p>   \r\n                <p> Need an account <a href='/register'> Sign Up </a></p>   \r\n                </center>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<Redirect to=\"/home\" />)\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\Auth\\Register.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestsCard.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\Alert.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\InterestSelects.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\CompletedCourses.js",["173","174"],"import React, {useState, useEffect, useContext, useCallback} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction CoursesCompleted(props) {\r\n\r\n\t\tconst data = useContext(AppContext);\r\n\r\n\t\tconst [courses, setCourses] = useState([]);\r\n\t\tconst [subjects, setSubjects] = useState({});\r\n\r\n\t\tconst deleteSubject = (subject_code) => {\r\n\t\t\t\r\n\t\t\t// Delete subject from array\r\n\t\t\tconst index = courses.indexOf(subject_code);\r\n\t\t\tlet new_courses = courses\r\n\t\t\tif (courses.length === 1) {\r\n\t\t\t\tnew_courses = []\r\n\t\t\t} else if (index > -1) {\r\n\t\t\t\tnew_courses = courses.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Make the student object\r\n\t\t\tlet student = {}\r\n\t\t\tstudent['id'] =  sessionStorage.getItem('user_id');\r\n\t\t\tstudent[\"student_data\"] = {}\r\n\t\t\tstudent[\"student_data\"]['name'] = props.student.name;\r\n\t\t\tstudent[\"student_data\"]['degree'] = props.student.degree;\r\n\t\t\tstudent[\"student_data\"]['major'] = props.student.major;\r\n\t\t\tstudent[\"student_data\"]['year'] = props.student.year;\r\n\t\t\tstudent[\"student_data\"]['postgraduate'] = props.student.postgraduate;\r\n\t\t\tstudent[\"student_data\"]['interests'] = props.student.interests;\r\n\t\t\tstudent[\"student_data\"]['courses_completed'] = new_courses;\r\n\r\n\r\n\t\t\tlet url = 'http://${process.env.REACT_APP_SERVER}/api/update-student'\r\n\t\t\tif (props.student == null) url = 'http://${process.env.REACT_APP_SERVER}/api/new-student'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify(student),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\talert(\"Details updated\")\r\n\t\t\t\t\t\tsetCourses(new_courses)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst error = JSON.parse(await res.json());\r\n\t\t\t\t\t\talert(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\talert(err)\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tconst findSubjects = useCallback(() => {\r\n\t\t\tsetCourses(props.courses)\r\n\t\t\tlet subject_obj = {};\r\n\t\t\tdata.forEach(elem => {\r\n\t\t\t\tif (courses.includes(elem._id)) {\r\n\t\t\t\t\tsubject_obj[elem._id] = elem\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSubjects(subject_obj);\r\n\t\t}, [courses, data, props.courses]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tfindSubjects()\r\n\t\t}, [findSubjects]);\r\n\r\n\t\tif (courses.length > 0 && Object.keys(subjects).length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\tObject.keys(courses).map((index) => (\r\n\t\t\t\t\t\t<Chip style={{marginBottom: '10px', marginRight: '0.5%'}} label={courses[index] + \" - \" + subjects[courses[index]]['course_name']}  onDelete={() => deleteSubject(courses[index])} color=\"primary\" />\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<p>No Courses Completed...</p>\r\n\t\t\t)\r\n\t\t}\r\n \r\n}\r\n\r\nexport default CoursesCompleted;\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\components\\MajorSelect.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AdminDash.js",["175","176"],"import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport CourseGrid from './CourseGrid';\r\nimport {AppContext} from '../../AppContext';\r\nimport CourseEditButtons from './CourseEditButtons';\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Alert from '../../components/Alert';\r\n\r\nexport default function AdminDash() {\r\n    \r\n\tconst data = useContext(AppContext);\r\n    const [courses, setCourses] = useState([]);\r\n    const [current, setCurrentSelected] = useState([]);\r\n    const [showDelete, setShowDelete] = useState(true);\r\n\t\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [alertMessage, setAlertMessage] = useState(false)\r\n\r\n    // Convert to a formate useable in the rows\r\n    const dataToRows = useCallback(() => {\r\n        let rows = [];\r\n\r\n        for (let i = 0, length = data.length; i < length; i++) {\r\n            let course = data[i];\r\n            course['id'] = course._id;\r\n            rows[i] = course;\r\n        }\r\n\r\n        setCourses(rows);\r\n    }, [data, setCourses]);\r\n\r\n    // Runs on page load\r\n    useEffect(() => {\r\n        dataToRows();\r\n    }, [dataToRows]);\r\n\r\n    const handleSelected = (grid_selected) => {\r\n        let selected = grid_selected;\r\n        setCurrentSelected(selected);\t\r\n        setShowDelete(true);\r\n    };\r\n\r\n    function handleAdd() {\r\n        console.log('add');\r\n        <Link to='/addcourse'>Add Course</Link>;\r\n    }\r\n\r\n    function handleEdit() {\r\n        console.log('edit');\r\n    }\r\n\r\n    const handleDelete = () => {\r\n\t    setShowDelete(false);\r\n    };\r\n\t\r\n    const confirmDelete = () => {\r\n\r\n\t\t// Remove from courses\r\n\t\tlet rows = [];\r\n        for (let i = 0, length = courses.length; i < length; i++) {\r\n            let course = courses[i];\r\n\t\t\tif (course && !current.includes(course._id)) {\r\n\t\t\t\tcourse['id'] = course._id;\r\n\t\t\t\trows[i] = course;\r\n\t\t\t}\r\n        }\r\n        setCourses(rows);\r\n\r\n\t\t// Post to server\r\n\r\n\t\t// Alert\r\n\t\tsetAlertMessage('Course(s) Deleted')\r\n\t\tsetShowAlert(true);\r\n\r\n        let selected = [];\r\n        setCurrentSelected(selected);\t\r\n\r\n\t    setShowDelete(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <center>\r\n                        <header>\r\n                            <strong>Admin Dashboard</strong>\r\n                        </header>\r\n                    </center>\r\n                </div>\r\n                <br />\r\n\r\n                <div style={{paddingBottom: '10px', textAlign: 'right'}}>\r\n                    <CourseEditButtons current={current} handleDelete={handleDelete} />\r\n                </div>\r\n\r\n                <br />\r\n                <Card variant='outlined' hidden={showDelete}>\r\n                    <CardContent style={{ paddingTop: '0px', paddingBottom: '0px' }}>\r\n                        <p> Please confirm you wish to delete: </p>\r\n                        <ul>\r\n                            {current.map((code, key) => (\r\n                                <li key={key}> Subject: {code} </li>\r\n                            ))}\r\n                        </ul>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size='small' onClick={() => setShowDelete(true)}>Cancel</Button>\r\n                        <Button size='small' onClick={() => confirmDelete()}>Confirm Delete</Button>\r\n                    </CardActions>\r\n                </Card>\r\n                <br />\r\n\r\n                <CourseGrid rows={courses} handleSelected={handleSelected} />\r\n\r\n\t\t\t\t<Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\AddCourse.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseGrid.js",[],"C:\\Users\\jaker\\Desktop\\SES-2A-Team2\\Frontend\\src\\pages\\AdminComponents\\CourseEditButtons.js",["177","178"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: '#3f51b5 !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n\t\tpaddingLeft: '10px !important',\r\n\t\tpaddingRight: '10px !important',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(17, 82, 147) !important',\r\n        },\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#00000042 !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n    },\r\n\tbuttonDelete: {\r\n        backgroundColor: '\t#cb234d !important',\r\n        color: '#fff !important',\r\n        marginRight: '1em !important',\r\n        borderRadius: '4px !important',\r\n        padding: '5px !important',\r\n    }\r\n}));\r\n\r\nexport default function CourseEditButtons(props) {\r\n    \r\n\tconst [empty, setEmpty] = useState(false);\r\n    const [single, setSingle] = useState(false);\r\n    const [multiple, setMultiple] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let selected = props.current;\r\n\t\tconsole.log(selected.length)\r\n        if (selected.length < 1) {\r\n            setEmpty(true);\r\n\t\t\tsetSingle(false);\r\n\t\t\tsetMultiple(false)\r\n        } else if (selected.length === 1) {\r\n            setSingle(true);\r\n\t\t\tsetEmpty(false);\r\n\t\t\tsetMultiple(false)\r\n        } else {\r\n\t\t\tsetSingle(false);\r\n\t\t\tsetEmpty(false);\r\n\t\t\tsetMultiple(true)\r\n        }\r\n\r\n    }, [props.current]);\r\n\r\n    const classes = useStyles();\r\n\r\n    if (empty) {\r\n        return (\r\n            <>\r\n                <Button className={classes.button}>Add Course</Button>\r\n                <Button className={classes.buttonDisabled} disabled>Delete Course</Button>\r\n            </>\r\n        );\r\n    } else if (single){\r\n        return (\r\n            <>\r\n                <Button className={classes.button}>Add Course</Button>\r\n                <Button className={classes.buttonDelete} onClick={() => props.handleDelete()}>Delete Course</Button>\r\n\t\t\t\t<Button className={classes.button}>Edit Course: {props.current}</Button>\r\n            </>\r\n        );\r\n\t} else {\r\n        return (\r\n            <>\r\n                <Button className={classes.button}>Add Course</Button>\r\n                <Button className={classes.buttonDelete} onClick={() => props.handleDelete()}>Delete Courses</Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":37,"column":22,"nodeType":"185","messageId":"186","endLine":37,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":28,"column":17,"nodeType":"189","endLine":28,"endColumn":122},{"ruleId":"190","severity":1,"message":"191","line":83,"column":15,"nodeType":"192","messageId":"193","endLine":83,"endColumn":71},{"ruleId":"187","severity":1,"message":"188","line":24,"column":17,"nodeType":"189","endLine":24,"endColumn":118},{"ruleId":"190","severity":1,"message":"191","line":36,"column":14,"nodeType":"192","messageId":"193","endLine":36,"endColumn":73},{"ruleId":"190","severity":1,"message":"191","line":37,"column":37,"nodeType":"192","messageId":"193","endLine":37,"endColumn":93},{"ruleId":"183","severity":1,"message":"194","line":49,"column":14,"nodeType":"185","messageId":"186","endLine":49,"endColumn":23},{"ruleId":"183","severity":1,"message":"195","line":54,"column":14,"nodeType":"185","messageId":"186","endLine":54,"endColumn":24},{"ruleId":"183","severity":1,"message":"196","line":39,"column":12,"nodeType":"185","messageId":"186","endLine":39,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":58,"column":8,"nodeType":"199","endLine":58,"endColumn":23,"suggestions":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'setIsAdminPage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'handleAdd' is defined but never used.","'handleEdit' is defined but never used.","'multiple' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Mutable values like 'props.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [props]",{"range":"206","text":"207"},[1692,1707],"[props]"]