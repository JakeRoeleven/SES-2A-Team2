{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\SubjectList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SubjectCard from './SubjectCard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SubjectList(props) {\n  _s();\n\n  const [subjects, setSubjects] = useState({});\n  const [loadTime, setLoadTime] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchSubjects = useCallback(async () => {\n    fetch('/api/subjects', {\n      crossDomain: true,\n      mode: 'cors',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(async res => {\n      console.lgo9res;\n      let data = await res.json();\n      setSubjects(data);\n      setLoadTime(data.run_time);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }, []);\n  useEffect(() => {\n    fetchSubjects();\n  }, [fetchSubjects]);\n\n  if (loading || error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"10%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: \"Subjects Recommended for You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            float: \"right\"\n          },\n          children: [\" 5 Subjects found in: \", loadTime, \"s \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), Object.keys(subjects).slice(0, 5).map((subject, key) => /*#__PURE__*/_jsxDEV(SubjectCard, {\n        subject: subjects[subject]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(SubjectList, \"l6oMNl5Q0joas361DAsOvNpwglE=\");\n\n_c = SubjectList;\nexport default SubjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubjectList\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/SubjectList.js"],"names":["React","useState","useEffect","useCallback","SubjectCard","CircularProgress","SubjectList","props","subjects","setSubjects","loadTime","setLoadTime","loading","setLoading","error","setError","fetchSubjects","fetch","crossDomain","mode","method","headers","then","res","console","lgo9res","data","json","run_time","catch","err","log","paddingTop","padding","display","float","Object","keys","slice","map","subject","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMe,aAAa,GAAGb,WAAW,CAAC,YAAY;AAC1Cc,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,MAAAA,WAAW,EAAE,IADM;AAEnBC,MAAAA,IAAI,EAAC,MAFc;AAGnBC,MAAAA,MAAM,EAAE,KAHW;AAInBC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAEL,uCAA+B;AAF1B;AAJU,KAAlB,CAAL,CAQGC,IARH,CAQQ,MAAOC,GAAP,IAAe;AACnBC,MAAAA,OAAO,CAACC,OAAR;AACA,UAAIC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAjB;AACAlB,MAAAA,WAAW,CAACiB,IAAD,CAAX;AACAf,MAAAA,WAAW,CAACe,IAAI,CAACE,QAAN,CAAX;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAdD,EAcGgB,KAdH,CAcUC,GAAD,IAAS;AACdN,MAAAA,OAAO,CAACO,GAAR,CAAYD,GAAZ;AACAf,MAAAA,QAAQ,CAACe,GAAD,CAAR;AACH,KAjBD;AAkBH,GAnBgC,EAmB9B,EAnB8B,CAAjC;AAqBA5B,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;;AAIA,MAAIJ,OAAO,IAAIE,KAAf,EAAsB;AAClB,wBACI;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA,6BACI;AAAA,+BAAQ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,8BAEI;AAAA,gCACI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAV;AAAA,+CAAmDzB,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOK0B,MAAM,CAACC,IAAP,CAAY7B,QAAZ,EAAsB8B,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkCC,GAAlC,CAAsC,CAACC,OAAD,EAAUC,GAAV,kBACnC,QAAC,WAAD;AAAuB,QAAA,OAAO,EAAEjC,QAAQ,CAACgC,OAAD;AAAxC,SAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA,cADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;AACJ;;GAtDQnC,W;;KAAAA,W;AAwDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport SubjectCard from './SubjectCard';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction SubjectList(props) {\r\n\r\n    const [subjects, setSubjects] = useState({})\r\n    const [loadTime, setLoadTime] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const fetchSubjects = useCallback(async () => {\r\n        fetch('/api/subjects', {\r\n            crossDomain: true,\r\n            mode:'cors',\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        }).then(async (res) => {\r\n            console.lgo9res\r\n            let data = await res.json();\r\n            setSubjects(data)\r\n            setLoadTime(data.run_time);\r\n            setLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setError(err)\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchSubjects();\r\n    }, [fetchSubjects]);\r\n\r\n    if (loading || error) {\r\n        return (\r\n            <div style={{paddingTop: \"10%\"}}>\r\n                <center><CircularProgress /></center>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{padding: \"2%\"}}>\r\n\r\n                <div>\r\n                    <h2 style={{display: \"inline-block\"}}>Subjects Recommended for You</h2>\r\n                    <p style={{float: \"right\"}}> 5 Subjects found in: {loadTime}s </p>\r\n                </div>\r\n\r\n                {Object.keys(subjects).slice(0, 5).map((subject, key) => (\r\n                    <SubjectCard key={key} subject={subjects[subject]} />\r\n                ))}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubjectList;\r\n"]},"metadata":{},"sourceType":"module"}