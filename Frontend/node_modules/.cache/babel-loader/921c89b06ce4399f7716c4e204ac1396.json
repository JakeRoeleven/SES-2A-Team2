{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n\nfunction Search() {\n  _s();\n\n  const classes = useStyles();\n  const [subjects, setSubjects] = useState({});\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const fetchData = useCallback(async () => {\n    fetch('http://localhost:8080/api/subjects', {\n      crossDomain: true,\n      mode: 'cors',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        let json = await res.json();\n        setSubjects(json);\n      } else {\n        setError(true);\n        setErrorMessage('The application failed to get the subject list. Please try again later');\n      }\n    }).catch(err => {\n      setError(true);\n      setErrorMessage('The application failed to get the subject list. Please try again later');\n    });\n  }, []);\n  useEffect(() => {\n    if (Object.keys(subjects).length < 1000) fetchData();\n  }, [fetchData]);\n\n  const Heading = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \" Subject List Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search\\u2026\",\n          classes: {\n            root: classes.inputRoot,\n            input: classes.inputInput\n          },\n          inputProps: {\n            'aria-label': 'search'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"aXeskX5LLQMt4A++4R5EhOJi5Fg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Search.js"],"names":["React","useState","useEffect","useCallback","CssBaseline","Typography","Container","Grid","InputBase","fade","makeStyles","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","classes","subjects","setSubjects","error","setError","errorMessage","setErrorMessage","fetchData","fetch","crossDomain","mode","method","headers","then","res","status","json","catch","err","Object","keys","length","Heading","input"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction Search() {\r\n\r\n    const classes = useStyles();\r\n    const [subjects, setSubjects] = useState({});\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        fetch('http://localhost:8080/api/subjects', {\r\n            crossDomain: true,\r\n            mode: 'cors',\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n        })\r\n            .then(async (res) => {\r\n                if (res.status === 200) {\r\n                    let json = await res.json();\r\n                    setSubjects(json);\r\n                } else {\r\n                    setError(true);\r\n                    setErrorMessage(\r\n                        'The application failed to get the subject list. Please try again later'\r\n                    );\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setError(true);\r\n                setErrorMessage(\r\n                    'The application failed to get the subject list. Please try again later'\r\n                );\r\n            });\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (Object.keys(subjects).length < 1000) fetchData();\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    const Heading = () => {\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <Typography variant='h4'> Subject List Search </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <InputBase\r\n                        placeholder='Search…'\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{'aria-label': 'search'}}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Heading />\r\n                <Typography />\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}