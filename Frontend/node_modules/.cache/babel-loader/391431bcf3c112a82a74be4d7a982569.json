{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport SubjectCard from '../components/SubjectCard';\nimport { AppContext } from '../AppContext';\nimport InterestsCard from '../components/InterestsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Recommendations() {\n  _s();\n\n  const data = useContext(AppContext);\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    setResults(data);\n  }, [data]);\n\n  const findSubjects = recommendations => {\n    let subject_obj = {}; //TODO : Replace this to hackey\n\n    recommendations = recommendations.split(\",\");\n    data.forEach(elem => {\n      console.log(elem._id);\n    }); // recommendations.forEach(elem => {\n    //     subject_obj[elem.replace(/\\D/g, '')]\n    // })\n\n    console.log(data);\n    console.log(subject_obj);\n  };\n\n  const findRecommendations = recommendations => {\n    fetch('http://localhost:8080/api/recommendation', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"student\": {\n          \"interests\": [\"Programming\", \"Maths\", \"Economics\"]\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      let json = await res.json(res);\n      findSubjects(json.recommendations);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \" Course Recommendations \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InterestsCard, {\n        findRecommendations: findRecommendations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), Object.keys(results).slice(0, 5).map((subject, key) => /*#__PURE__*/_jsxDEV(SubjectCard, {\n        subject: results[subject]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Recommendations, \"6Z7+LA4fuYhwfB/lsT/qeSEe4Dw=\");\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Recommendations.js"],"names":["React","useState","useEffect","useContext","CssBaseline","Typography","Container","Grid","SubjectCard","AppContext","InterestsCard","Recommendations","data","results","setResults","findSubjects","recommendations","subject_obj","split","forEach","elem","console","log","_id","findRecommendations","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","Object","keys","slice","map","subject","key"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SubjectCard from '../components/SubjectCard';\r\n\r\nimport { AppContext } from '../AppContext';\r\nimport InterestsCard from '../components/InterestsCard';\r\n\r\nfunction Recommendations() {  \r\n    \r\n    const data = useContext(AppContext);\r\n    const [results, setResults] = useState({});\r\n    \r\n    useEffect(() => {\r\n        setResults(data)\r\n    }, [data]);\r\n\r\n    const findSubjects = (recommendations) => {\r\n\r\n        let subject_obj = {};\r\n\r\n        //TODO : Replace this to hackey\r\n        recommendations = recommendations.split(\",\")\r\n\r\n        data.forEach(elem => {\r\n            console.log(elem._id)\r\n        })\r\n        // recommendations.forEach(elem => {\r\n        //     subject_obj[elem.replace(/\\D/g, '')]\r\n        // })\r\n\r\n        console.log(data)\r\n\r\n        console.log(subject_obj)\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    const findRecommendations = (recommendations) => {  \r\n        fetch('http://localhost:8080/api/recommendation', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"student\": {\r\n                    \"interests\": [\"Programming\", \"Maths\", \"Economics\"]\r\n                }\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then(async (res) => {\r\n            let json = await res.json(res)\r\n            findSubjects(json.recommendations)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Typography variant='h5'> Course Recommendations </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <InterestsCard findRecommendations={findRecommendations}></InterestsCard>\r\n                <br />\r\n                {Object.keys(results).slice(0, 5).map((subject, key) => (\r\n                    <SubjectCard key={key} subject={results[subject]} />\r\n                ))}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Recommendations;\r\n"]},"metadata":{},"sourceType":"module"}