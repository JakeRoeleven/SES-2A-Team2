{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport firebase from '../firebase';\nimport { CircularProgress } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  console.log(firebase.getCurrentUser());\n\n  if (firebase.getCurrentUser() == null) {\n    if (isLoggedIn && !firebase.getCurrentUser()) {\n      setIsLoggedIn(false);\n      setIsLoaded(true);\n    }\n  } else {\n    if (!isLoaded) setIsLoaded(true);\n  }\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 63\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 90\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(PrivateRoute, \"dpRqH7ZK/F/i/SiBbRt/k031HBc=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/PrivateRoute.js"],"names":["React","useState","Route","Redirect","firebase","CircularProgress","PrivateRoute","component","Component","rest","isLoggedIn","setIsLoggedIn","isLoaded","setIsLoaded","console","log","getCurrentUser","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAExD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACY,cAAT,EAAZ;;AACA,MAAIZ,QAAQ,CAACY,cAAT,MAA6B,IAAjC,EAAuC;AACnC,QAAIN,UAAU,IAAI,CAACN,QAAQ,CAACY,cAAT,EAAnB,EAA8C;AAC1CL,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GALD,MAKO;AACH,QAAI,CAACD,QAAL,EAAeC,WAAW,CAAC,IAAD,CAAX;AAClB;;AAED,MAAID,QAAJ,EAAc;AACV,wBACI,QAAC,KAAD,OAAWH,IAAX;AAAiB,MAAA,MAAM,EAAGQ,KAAD,IAAYP,UAAU,gBAAG,QAAC,SAAD,OAAeO;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA8B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAIO;AACH,wBACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CA1BD;;GAAMX,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport firebase from '../firebase';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    \r\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    console.log(firebase.getCurrentUser())\r\n    if (firebase.getCurrentUser() == null) {\r\n        if (isLoggedIn && !firebase.getCurrentUser()) {\r\n            setIsLoggedIn(false);\r\n            setIsLoaded(true);\r\n        }\r\n    } else {\r\n        if (!isLoaded) setIsLoaded(true);\r\n    }\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <Route {...rest} render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />)} />\r\n        );\r\n    } else {\r\n        return (\r\n            <div id=\"loader\">\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}