{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Form, Segment, Button, Message, Input, Checkbox } from 'semantic-ui-react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      fetch('api/user/register', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(async res => {\n        if (res.status === 200) {\n          this.setState({\n            hidden: true,\n            loading: false\n          });\n          this.props.history.push('/login');\n        } else {\n          const error = JSON.parse(await res.json());\n          this.setState({\n            hidden: false,\n            loading: false,\n            errorHeading: 'Error!',\n            errorMessage: error\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          hidden: false,\n          loading: false,\n          errorHeading: 'Error!',\n          errorMessage: 'Check you internet connection and try again!'\n        });\n      });\n    };\n\n    this.state = {\n      student: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        degree: '',\n        finishedCourses: '',\n        posgraduate: [],\n        interest: '',\n        errorHeading: 'Error',\n        errorMessage: 'Unknown error. Please try again!'\n      },\n      courseOptions: [{\n        value: 'course1',\n        label: 'Course 1'\n      }, {\n        value: 'course2',\n        label: 'Course 2'\n      }, {\n        value: 'course3',\n        label: 'Course 3'\n      }, {\n        value: 'course4',\n        label: 'Course 4'\n      }, {\n        value: 'course5',\n        label: 'Course 5'\n      }, {\n        value: 'course6',\n        label: 'Course 6'\n      }, {\n        value: 'course7',\n        label: 'Course 7'\n      }, {\n        value: 'course8',\n        label: 'Course 8'\n      }],\n      interestOptions: [{\n        value: 'interest1',\n        label: 'Interest1'\n      }, {\n        value: 'interest2',\n        label: 'Interest2'\n      }, {\n        value: 'interest3',\n        label: 'Interest3'\n      }, {\n        value: 'interest4',\n        label: 'Interest4'\n      }, {\n        value: 'interest5',\n        label: 'Interest5'\n      }, {\n        value: 'interest6',\n        label: 'Interest6'\n      }, {\n        value: 'interest7',\n        label: 'Interest7'\n      }, {\n        value: 'interest8',\n        label: 'Interest8'\n      }]\n    };\n  } // input checlbox for postgraduate\n\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      student: { ...prevState.student,\n        [name]: value\n      }\n    }), () => console.log(this.state.student));\n  }\n\n  handleCheckBox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.newStudent.interests.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newStudent.interests.filter(s => s !== newSelection);\n    } else {\n      newSelectionArray = [...this.state.newStudent.interests, newSelection];\n    }\n\n    this.setState(prevState => ({\n      newStudent: { ...prevState.newStudent,\n        interests: newSelectionArray\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        async: true,\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@${props.versions.sui}/dist/semantic.min.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        async: true,\n        src: \"//cdn.jsdelivr.net/npm/semantic-ui@${props.versions.sui}/dist/semantic.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        color: \"blue\",\n        padded: true,\n        textAlign: \"Left\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Finish Your Profile to Get Started \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          hidden: this.state.hidden,\n          error: true,\n          header: this.state.errorHeading,\n          content: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          size: \"large\",\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"First Name\",\n            name: \"firstname\",\n            required: true,\n            minLength: \"3\",\n            maxLength: \"20\",\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"First Name\",\n            value: this.state.name,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Lastname\",\n            name: \"lastname\",\n            required: true,\n            minLength: \"3\",\n            maxLength: \"20\",\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"Lastname\",\n            value: this.state.name,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Enrolled Degree\",\n            type: \"degree\",\n            name: \"degree\",\n            required: true,\n            placeholder: 'Select Degree',\n            value: this.state.degree,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Checkbox,\n            label: 'Postgraduate?',\n            name: \"postgraduate\",\n            required: true,\n            defaultValue: this.state.student.postgraduate,\n            handleChange: this.handleCheckBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Finished Courses\",\n            type: \"finishedCourses\",\n            name: \"finishedcourses\",\n            required: true,\n            fluid: true,\n            search: true,\n            selection: true,\n            options: this.state.courseOptions,\n            defaultValue: this.state.student.finishedCourses,\n            isMulti: true,\n            placeholder: 'Select Courses',\n            handleChange: this.handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Interests of Choice\",\n            type: \"interest\",\n            name: \"interest\",\n            required: true,\n            options: this.state.interestOptions,\n            defaultValue: this.state.student.interest,\n            isMulti: true,\n            placeholder: 'Select Interest',\n            handleChange: this.handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            loading: this.state.loading,\n            type: \"submit\",\n            value: \"Submit\",\n            color: \"blue\",\n            fluid: true,\n            size: \"large\",\n            children: \"View Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Home.js"],"names":["React","Component","Form","Segment","Button","Message","Input","Checkbox","Select","Home","constructor","props","handleInputChange","event","value","name","target","setState","onSubmit","loading","preventDefault","fetch","method","body","JSON","stringify","state","headers","then","res","status","hidden","history","push","error","parse","json","errorHeading","errorMessage","catch","err","student","firstname","lastname","email","degree","finishedCourses","posgraduate","interest","courseOptions","label","interestOptions","handleInput","e","prevState","console","log","handleCheckBox","newSelection","newSelectionArray","newStudent","interests","indexOf","filter","s","render","postgraduate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Form,\r\n    Segment,\r\n    Button,\r\n    Message,\r\n    Input,\r\n    Checkbox,\r\n} from 'semantic-ui-react';\r\nimport Select from 'react-select';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            student: {\r\n                firstname: '',\r\n                lastname: '',\r\n                email: '',\r\n                degree: '',\r\n                finishedCourses: '',\r\n                posgraduate: [],\r\n                interest: '',\r\n                errorHeading: 'Error',\r\n                errorMessage: 'Unknown error. Please try again!',\r\n            },\r\n\r\n            courseOptions: [\r\n                {value: 'course1', label: 'Course 1'},\r\n                {value: 'course2', label: 'Course 2'},\r\n                {value: 'course3', label: 'Course 3'},\r\n                {value: 'course4', label: 'Course 4'},\r\n                {value: 'course5', label: 'Course 5'},\r\n                {value: 'course6', label: 'Course 6'},\r\n                {value: 'course7', label: 'Course 7'},\r\n                {value: 'course8', label: 'Course 8'},\r\n            ],\r\n\r\n            interestOptions: [\r\n                {value: 'interest1', label: 'Interest1'},\r\n                {value: 'interest2', label: 'Interest2'},\r\n                {value: 'interest3', label: 'Interest3'},\r\n                {value: 'interest4', label: 'Interest4'},\r\n                {value: 'interest5', label: 'Interest5'},\r\n                {value: 'interest6', label: 'Interest6'},\r\n                {value: 'interest7', label: 'Interest7'},\r\n                {value: 'interest8', label: 'Interest8'},\r\n            ],\r\n        };\r\n    }\r\n\r\n    // input checlbox for postgraduate\r\n\r\n    handleInputChange = (event) => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    handleInput(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        this.setState(\r\n            (prevState) => ({student: {...prevState.student, [name]: value}}),\r\n            () => console.log(this.state.student)\r\n        );\r\n    }\r\n\r\n    handleCheckBox(e) {\r\n        const newSelection = e.target.value;\r\n        let newSelectionArray;\r\n\r\n        if (this.state.newStudent.interests.indexOf(newSelection) > -1) {\r\n            newSelectionArray = this.state.newStudent.interests.filter(\r\n                (s) => s !== newSelection\r\n            );\r\n        } else {\r\n            newSelectionArray = [\r\n                ...this.state.newStudent.interests,\r\n                newSelection,\r\n            ];\r\n        }\r\n\r\n        this.setState((prevState) => ({\r\n            newStudent: {...prevState.newStudent, interests: newSelectionArray},\r\n        }));\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        this.setState({loading: true});\r\n        event.preventDefault();\r\n        fetch('api/user/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(async (res) => {\r\n                if (res.status === 200) {\r\n                    this.setState({hidden: true, loading: false});\r\n                    this.props.history.push('/login');\r\n                } else {\r\n                    const error = JSON.parse(await res.json());\r\n                    this.setState({\r\n                        hidden: false,\r\n                        loading: false,\r\n                        errorHeading: 'Error!',\r\n                        errorMessage: error,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    hidden: false,\r\n                    loading: false,\r\n                    errorHeading: 'Error!',\r\n                    errorMessage:\r\n                        'Check you internet connection and try again!',\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <link\r\n                    async\r\n                    rel='stylesheet'\r\n                    href='//cdn.jsdelivr.net/npm/semantic-ui@${props.versions.sui}/dist/semantic.min.css'\r\n                />\r\n                <script\r\n                    async\r\n                    src='//cdn.jsdelivr.net/npm/semantic-ui@${props.versions.sui}/dist/semantic.min.js'\r\n                ></script>\r\n                <Segment color='blue' padded textAlign='Left'>\r\n                    <br />\r\n                    <h1> Finish Your Profile to Get Started </h1>\r\n                    <Message\r\n                        hidden={this.state.hidden}\r\n                        error\r\n                        header={this.state.errorHeading}\r\n                        content={this.state.errorMessage}\r\n                    />\r\n                    <Form size='large' onSubmit={this.onSubmit}>\r\n                        <Form.Field\r\n                            control={Input}\r\n                            label='First Name'\r\n                            name='firstname'\r\n                            required\r\n                            minLength='3'\r\n                            maxLength='20'\r\n                            fluid\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='First Name'\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Form.Field\r\n                            control={Input}\r\n                            label='Lastname'\r\n                            name='lastname'\r\n                            required\r\n                            minLength='3'\r\n                            maxLength='20'\r\n                            fluid\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='Lastname'\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Form.Field\r\n                            control={Input}\r\n                            label='Enrolled Degree'\r\n                            type='degree'\r\n                            name='degree'\r\n                            required\r\n                            placeholder={'Select Degree'}\r\n                            value={this.state.degree}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Form.Field\r\n                            control={Checkbox}\r\n                            label={'Postgraduate?'}\r\n                            name='postgraduate'\r\n                            required\r\n                            defaultValue={this.state.student.postgraduate}\r\n                            handleChange={this.handleCheckBox}\r\n                        />\r\n                        <Form.Field\r\n                            control={Select}\r\n                            label='Finished Courses'\r\n                            type='finishedCourses'\r\n                            name='finishedcourses'\r\n                            required\r\n                            fluid\r\n                            search\r\n                            selection\r\n                            options={this.state.courseOptions}\r\n                            defaultValue={this.state.student.finishedCourses}\r\n                            isMulti\r\n                            placeholder={'Select Courses'}\r\n                            handleChange={this.handleInput}\r\n                        />\r\n                        <Form.Field\r\n                            control={Select}\r\n                            label='Interests of Choice'\r\n                            type='interest'\r\n                            name='interest'\r\n                            required\r\n                            options={this.state.interestOptions}\r\n                            defaultValue={this.state.student.interest}\r\n                            isMulti\r\n                            placeholder={'Select Interest'}\r\n                            handleChange={this.handleInput}\r\n                        />\r\n                        <Button\r\n                            loading={this.state.loading}\r\n                            type='submit'\r\n                            value='Submit'\r\n                            color='blue'\r\n                            fluid\r\n                            size='large'\r\n                        >\r\n                            View Recommendations\r\n                        </Button>\r\n                    </Form>\r\n                </Segment>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}