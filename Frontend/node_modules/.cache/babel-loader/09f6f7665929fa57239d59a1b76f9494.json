{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\frontend\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport SearchHandler from '../lib/searchHandler.js';\nimport SubjectCard from '../components/SubjectCard';\nimport { AppContext } from '../AppContext';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 'px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 2\n  }\n}));\n\nfunction Search() {\n  _s();\n\n  const data = useContext(AppContext);\n  const classes = useStyles();\n  const [subjects, setSubjects] = useState({});\n  const [results, setResults] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n\n  const searchSubjects = async key => {\n    setResults({});\n    let searchHandler = new SearchHandler(subjects);\n    let searchResults = await searchHandler.searchAllSubjects(key);\n    setResults(searchResults);\n  };\n\n  const onChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  useEffect(() => {\n    setSubjects(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \" Subject List Search \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          alignItems: 'flex-end',\n          alignContent: 'flex-end',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.search,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              component: \"form\",\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(InputBase, {\n                className: classes.input,\n                placeholder: \"Search Subjects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                className: classes.divider,\n                orientation: \"vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                type: \"submit\",\n                className: classes.iconButton,\n                \"aria-label\": \"search\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), Object.keys(results).slice(0, 5).map((subject, key) => /*#__PURE__*/_jsxDEV(SubjectCard, {\n        subject: results[subject]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"3C/6BElyzKnL005W3XUz/ugBjkA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/frontend/src/pages/Search.js"],"names":["React","useState","useEffect","useContext","CssBaseline","Typography","Container","Grid","InputBase","fade","makeStyles","SearchIcon","Button","SearchHandler","SubjectCard","AppContext","Paper","Divider","IconButton","MenuIcon","DirectionsIcon","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","Search","data","classes","subjects","setSubjects","results","setResults","searchValue","setSearchValue","loading","setLoading","loadingMessage","setLoadingMessage","searchSubjects","key","searchHandler","searchResults","searchAllSubjects","onChange","event","target","value","search","Object","keys","slice","map","subject"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchHandler from '../lib/searchHandler.js';\r\nimport SubjectCard from '../components/SubjectCard';\r\n\r\nimport {AppContext} from '../AppContext';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 'px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nfunction Search() {\r\n    const data = useContext(AppContext);\r\n    const classes = useStyles();\r\n\r\n    const [subjects, setSubjects] = useState({});\r\n    const [results, setResults] = useState({});\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingMessage, setLoadingMessage] = useState('');\r\n\r\n    const searchSubjects = async (key) => {\r\n        setResults({});\r\n        let searchHandler = new SearchHandler(subjects);\r\n        let searchResults = await searchHandler.searchAllSubjects(key);\r\n        setResults(searchResults);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSubjects(data);\r\n    }, [data]);\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Typography variant='h5'> Subject List Search </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} alignItems={'flex-end'} alignContent={'flex-end'}>\r\n                        <div className={classes.search}>\r\n                            <Paper component='form' className={classes.root}>\r\n                                <InputBase className={classes.input} placeholder='Search Subjects' />\r\n                                <Divider className={classes.divider} orientation='vertical' />\r\n                                <IconButton type='submit' className={classes.iconButton} aria-label='search'>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                {Object.keys(results)\r\n                    .slice(0, 5)\r\n                    .map((subject, key) => (\r\n                        <SubjectCard key={key} subject={results[subject]} />\r\n                    ))}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}