{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\StudentForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Segment } from 'semantic-ui-react';\nimport { Button, TextField, Container, Grid, Typography } from '@material-ui/core';\nimport Select from 'react-select';\nimport InterestSelect from '../components/InterestSelects';\nimport firebase from './../firebase';\nimport MajorSelect from '../components/MajorSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst degreeYearOptions = [{\n  value: '1',\n  label: '1'\n}, {\n  value: '2',\n  label: '2'\n}, {\n  value: '3',\n  label: '3'\n}, {\n  value: '4',\n  label: '4'\n}, {\n  value: '5',\n  label: '5'\n}, {\n  value: '6',\n  label: '6'\n}];\n\nclass StudentForm extends Component {\n  // TODO: Postgrad, DEgree Name, Redirect if already have details, for validation\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSelectInputChange = async (event, select) => {\n      let name = select.name;\n      let value = event.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.setCurrentInterests = value => {\n      this.setState({\n        current_interests: value\n      });\n    };\n\n    this.setMajor = value => {\n      this.setState({\n        major: value\n      });\n    };\n\n    this.setDisplayedInterests = value => {\n      this.setState({\n        displayed_interests: value\n      });\n    };\n\n    this.getStudentData = () => {\n      let student = {};\n      let firebaseDetails = firebase.getCurrentUser(); // Push id from firebase\n\n      student['id'] = firebaseDetails.l;\n      student['student_data'] = {};\n      student['student_data']['name'] = this.state.firstname.concat(' ').concat(this.state.lastname); //TODO: Need degree\n\n      student['student_data']['degree'] = this.state.major;\n      student['student_data']['major'] = this.state.major;\n      student['student_data']['year'] = this.state.yearOfDegree;\n      student['student_data']['postgraduate'] = false;\n      student['student_data']['interests'] = this.state.current_interests;\n      return student;\n    };\n\n    this.onSubmit = async event => {\n      let student = this.getStudentData();\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      fetch('http://localhost:8080/api/new-student', {\n        method: 'POST',\n        body: JSON.stringify(student),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(async res => {\n        if (res.status === 200) {\n          this.props.history.push('/home');\n        } else {\n          const error = JSON.parse(await res.json());\n          alert(error);\n        }\n      }).catch(err => {\n        alert(err);\n      });\n    };\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      major: '',\n      yearOfDegree: '',\n      current_interests: [],\n      displayed_interests: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      color: \"blue\",\n      padded: true,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \" Setup Your Account To Begin \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          size: \"large\",\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"firstname\",\n            required: true,\n            minLength: \"3\",\n            maxLength: \"20\",\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"First Name\",\n            value: this.state.firstname,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"lastname\",\n            required: true,\n            minLength: \"3\",\n            maxLength: \"20\",\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            placeholder: \"Lastname\",\n            value: this.state.lastname,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"degree\",\n            required: true,\n            minLength: \"3\",\n            maxLength: \"20\",\n            fluid: true,\n            icon: \"paper\",\n            iconPosition: \"left\",\n            placeholder: \"Lastname\",\n            value: this.state.degree,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            type: \"yearOfDegree\",\n            name: \"yearOfDegree\",\n            required: true,\n            options: degreeYearOptions,\n            defaultValue: this.state.yearOfDegree,\n            placeholder: 'Select Year Of Study',\n            onChange: this.handleSelectInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MajorSelect, {\n            setMajor: this.setMajor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InterestSelect, {\n            displayed_interests: this.state.displayed_interests,\n            setCurrentInterests: this.setCurrentInterests,\n            setDisplayedInterests: this.setDisplayedInterests\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            loading: this.state.loading,\n            type: \"submit\",\n            value: \"Submit\",\n            color: \"blue\",\n            fluid: true,\n            size: \"large\",\n            style: {\n              float: 'right'\n            },\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudentForm;","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/StudentForm.js"],"names":["React","Component","Form","Segment","Button","TextField","Container","Grid","Typography","Select","InterestSelect","firebase","MajorSelect","degreeYearOptions","value","label","StudentForm","constructor","props","handleInputChange","event","name","target","setState","handleSelectInputChange","select","setCurrentInterests","current_interests","setMajor","major","setDisplayedInterests","displayed_interests","getStudentData","student","firebaseDetails","getCurrentUser","l","state","firstname","concat","lastname","yearOfDegree","onSubmit","loading","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","history","push","error","parse","json","alert","catch","err","render","degree","float"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Segment} from 'semantic-ui-react';\r\nimport {Button, TextField, Container, Grid, Typography} from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport InterestSelect from '../components/InterestSelects';\r\nimport firebase from './../firebase';\r\nimport MajorSelect from '../components/MajorSelect';\r\n\r\nconst degreeYearOptions = [\r\n    {value: '1', label: '1'},\r\n    {value: '2', label: '2'},\r\n    {value: '3', label: '3'},\r\n    {value: '4', label: '4'},\r\n    {value: '5', label: '5'},\r\n    {value: '6', label: '6'},\r\n];\r\n\r\nclass StudentForm extends Component {\r\n    // TODO: Postgrad, DEgree Name, Redirect if already have details, for validation\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            major: '',\r\n            yearOfDegree: '',\r\n            current_interests: [],\r\n            displayed_interests: [],\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    handleSelectInputChange = async (event, select) => {\r\n        let name = select.name;\r\n        let value = event.value;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    setCurrentInterests = (value) => {\r\n        this.setState({current_interests: value});\r\n    };\r\n\r\n    setMajor = (value) => {\r\n        this.setState({major: value});\r\n    };\r\n\r\n    setDisplayedInterests = (value) => {\r\n        this.setState({displayed_interests: value});\r\n    };\r\n\r\n    getStudentData = () => {\r\n        let student = {};\r\n        let firebaseDetails = firebase.getCurrentUser();\r\n\r\n        // Push id from firebase\r\n        student['id'] = firebaseDetails.l;\r\n\r\n        student['student_data'] = {};\r\n        student['student_data']['name'] = this.state.firstname.concat(' ').concat(this.state.lastname);\r\n\r\n        //TODO: Need degree\r\n        student['student_data']['degree'] = this.state.major;\r\n        student['student_data']['major'] = this.state.major;\r\n        student['student_data']['year'] = this.state.yearOfDegree;\r\n        student['student_data']['postgraduate'] = false;\r\n        student['student_data']['interests'] = this.state.current_interests;\r\n\r\n        return student;\r\n    };\r\n\r\n    onSubmit = async (event) => {\r\n        let student = this.getStudentData();\r\n        this.setState({loading: true});\r\n        event.preventDefault();\r\n        fetch('http://localhost:8080/api/new-student', {\r\n            method: 'POST',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(async (res) => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/home');\r\n                } else {\r\n                    const error = JSON.parse(await res.json());\r\n                    alert(error);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Segment color='blue' padded textAlign='center'>\r\n                <br />\r\n                {/* <Message\r\n                    hidden={this.state.hidden}\r\n                    error\r\n                    header={this.state.errorHeading}\r\n                    content={this.state.errorMessage}\r\n                /> */}\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'> Setup Your Account To Begin </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Form size='large' onSubmit={this.onSubmit}>\r\n\r\n                        <br />\r\n                        <TextField name='firstname' required minLength='3' maxLength='20' fluid icon='user' iconPosition='left' placeholder='First Name' value={this.state.firstname} onChange={this.handleInputChange} />\r\n                        <TextField name='lastname' required minLength='3' maxLength='20' fluid icon='user' iconPosition='left' placeholder='Lastname' value={this.state.lastname} onChange={this.handleInputChange} />\r\n\r\n                        <br />\r\n                        <TextField name='degree' required minLength='3' maxLength='20' fluid icon='paper' iconPosition='left' placeholder='Lastname' value={this.state.degree} onChange={this.handleInputChange} />\r\n\r\n                        <br /><br /><br />\r\n                        <Select type='yearOfDegree' name='yearOfDegree' required options={degreeYearOptions} defaultValue={this.state.yearOfDegree} placeholder={'Select Year Of Study'} onChange={this.handleSelectInputChange} />\r\n                        \r\n                        <br />\r\n                        <MajorSelect setMajor={this.setMajor} />\r\n                        \r\n                        <br />\r\n                        <InterestSelect displayed_interests={this.state.displayed_interests} setCurrentInterests={this.setCurrentInterests} setDisplayedInterests={this.setDisplayedInterests} />\r\n                        \r\n                        <br />\r\n                        <Button loading={this.state.loading} type='submit' value='Submit' color='blue' fluid size='large' style={{float: 'right'}}>\r\n                            Create Account\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentForm;\r\n"]},"metadata":{},"sourceType":"module"}