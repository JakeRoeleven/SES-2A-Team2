{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\InterestsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Card, InputBase, Typography, CardActions, CardContent, Button } from '@material-ui/core';\nimport InterestSelect from '../components/InterestSelects';\nimport firebase from './../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InterestsCard(props) {\n  _s();\n\n  const [fetchedStudent, setFetchedStudent] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [interests, setInterests] = useState([]);\n  const [displayedInterests, setDisplayedInterests] = useState([]);\n  const [interestsInput, setInterestsInput] = useState('');\n  const [completedInput, setCompletedInput] = useState('');\n  const [completedSubjects, setCompletedSubjects] = useState('');\n  const [faculty, setFaculty] = useState('');\n  const [firebaseID, setFirebaseID] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const onInterestsChange = event => {\n    setInterestsInput(event.target.value);\n    let temp_interests = event.target.value.split(\",\");\n    let interests_array = [];\n    temp_interests.forEach(elem => {\n      console.log(elem);\n      interests_array.push(elem.replace(/\\W/g, ''));\n    });\n    setInterests(interests_array);\n  };\n\n  const onCompletedChange = event => {\n    setCompletedInput(event.target.value);\n    let temp_interests = event.target.value.split(\",\");\n    let interests_array = [];\n    temp_interests.forEach(elem => {\n      console.log(elem);\n      interests_array.push(elem.replace(/\\W/g, ''));\n    });\n    setCompletedSubjects(interests_array);\n  };\n\n  const getStudentObj = () => {\n    let student = {\n      interests: interests,\n      faculty: faculty,\n      courses_completed: completedSubjects\n    };\n    return student;\n  };\n\n  const setInterestsDropdownList = interests_array => {\n    let interests_obj_array = [];\n    interests_array.forEach(elem => {\n      interests_obj_array.push({\n        value: elem,\n        label: elem\n      });\n    });\n    setDisplayedInterests(interests_obj_array); //setDisplayedInterests(interests_obj_array)\n  };\n\n  const fetchStudent = async () => {\n    console.log('featching stuendt');\n    let firebaseDetails = null;\n    firebaseDetails = await firebase.getCurrentUser();\n\n    if (firebaseDetails !== null) {\n      fetch(`http://localhost:8080/api/student/${firebaseDetails.l}`, {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(async res => {\n        let data = await res.json();\n        setFetchedStudent(true);\n        setLoading(false);\n        setInterestsDropdownList(data.interests);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!fetchedStudent) fetchStudent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginBottom: '1%',\n      padding: '1%',\n      overflow: 'visible'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \" Input Your Interests \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InterestSelect, {\n        displayed_interests: displayedInterests,\n        setCurrentInterests: setInterests,\n        setDisplayedInterests: setDisplayedInterests\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \" Input Your Completed Subject Codes (Comma Separated) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Completed Subjects...\",\n        inputProps: {\n          'aria-label': 'search'\n        },\n        value: completedInput,\n        onChange: onCompletedChange,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'right'\n        },\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => props.findRecommendations(getStudentObj()),\n        children: \" Find Recommendations \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InterestsCard, \"spYHd23P79IkK/fLL2Fty7pqSec=\");\n\n_c = InterestsCard;\nexport default InterestsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestsCard\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/InterestsCard.js"],"names":["React","useEffect","useState","useCallback","Card","InputBase","Typography","CardActions","CardContent","Button","InterestSelect","firebase","InterestsCard","props","fetchedStudent","setFetchedStudent","loading","setLoading","interests","setInterests","displayedInterests","setDisplayedInterests","interestsInput","setInterestsInput","completedInput","setCompletedInput","completedSubjects","setCompletedSubjects","faculty","setFaculty","firebaseID","setFirebaseID","userDetails","setUserDetails","onInterestsChange","event","target","value","temp_interests","split","interests_array","forEach","elem","console","log","push","replace","onCompletedChange","getStudentObj","student","courses_completed","setInterestsDropdownList","interests_obj_array","label","fetchStudent","firebaseDetails","getCurrentUser","fetch","l","crossDomain","mode","method","headers","then","res","data","json","catch","err","marginBottom","padding","overflow","float","findRecommendations"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useCallback } from 'react';\r\nimport {Card, InputBase, Typography, CardActions, CardContent, Button,} from '@material-ui/core';\r\nimport InterestSelect from '../components/InterestSelects';\r\nimport firebase from './../firebase';\r\n\r\nfunction InterestsCard(props) {\r\n\r\n    const [fetchedStudent, setFetchedStudent] = useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [interests, setInterests] = useState([]);\r\n    const [displayedInterests, setDisplayedInterests] = useState([]);\r\n\r\n    const [interestsInput, setInterestsInput] = useState('');\r\n    const [completedInput, setCompletedInput] = useState('')\r\n    const [completedSubjects, setCompletedSubjects] = useState('');\r\n    const [faculty, setFaculty] = useState('');\r\n\r\n    const [firebaseID, setFirebaseID] = useState(null);\r\n    const [userDetails, setUserDetails] = useState(null)\r\n\r\n    const onInterestsChange = (event) => {\r\n        setInterestsInput(event.target.value)\r\n        let temp_interests = event.target.value.split(\",\");\r\n        let interests_array = [];\r\n        temp_interests.forEach(elem => {\r\n            console.log(elem)\r\n            interests_array.push(elem.replace(/\\W/g, ''))\r\n        })\r\n        setInterests(interests_array);\r\n    };\r\n\r\n    const onCompletedChange = (event) => {\r\n        setCompletedInput(event.target.value)\r\n        let temp_interests = event.target.value.split(\",\");\r\n        let interests_array = [];\r\n        temp_interests.forEach(elem => {\r\n            console.log(elem)\r\n            interests_array.push(elem.replace(/\\W/g, ''))\r\n        })\r\n        setCompletedSubjects(interests_array);\r\n    };\r\n\r\n    const getStudentObj = () => {\r\n        let student = {\r\n            interests: interests,\r\n            faculty: faculty,\r\n            courses_completed: completedSubjects\r\n        }\r\n        return(student)\r\n    }\r\n\r\n    const setInterestsDropdownList = (interests_array) => {\r\n        let interests_obj_array = [];\r\n        interests_array.forEach(elem => {\r\n            interests_obj_array.push({value: elem, label: elem});\r\n        })\r\n        setDisplayedInterests(interests_obj_array)\r\n        //setDisplayedInterests(interests_obj_array)\r\n    }\r\n\r\n    const fetchStudent = async () => {\r\n        console.log('featching stuendt')\r\n        let firebaseDetails = null\r\n        firebaseDetails = await firebase.getCurrentUser();\r\n        if (firebaseDetails !== null) {\r\n           \r\n            fetch(`http://localhost:8080/api/student/${firebaseDetails.l}`, {\r\n                crossDomain: true,\r\n                mode: 'cors',\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                },\r\n            })\r\n                .then(async (res) => {\r\n                    let data = await res.json();\r\n                    setFetchedStudent(true)\r\n                    setLoading(false)\r\n                    setInterestsDropdownList(data.interests)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n            });\r\n        }\r\n\t};\r\n\r\n    useEffect(() => {\r\n       if (!fetchedStudent) fetchStudent();\r\n    }, []);\r\n\r\n    return (\r\n        <Card style={{marginBottom: '1%', padding: '1%', overflow: 'visible'}}>\r\n            <CardContent>\r\n                <Typography> Input Your Interests </Typography>\r\n                <br />\r\n\r\n                <InterestSelect \r\n\t\t\t\t\t\tdisplayed_interests={displayedInterests} \r\n\t\t\t\t\t\tsetCurrentInterests={setInterests} \r\n\t\t\t\t\t\tsetDisplayedInterests={setDisplayedInterests} />\r\n\r\n                <br />\r\n                {/* <Typography> Input Your Faculty </Typography>\r\n                <FacultyDropdown setFaculty={setFaculty} faculty={faculty}/> */}\r\n\r\n                <Typography> Input Your Completed Subject Codes (Comma Separated) </Typography>\r\n                <br />\r\n\r\n                <InputBase\r\n                    placeholder='Completed Subjects...'\r\n                    inputProps={{'aria-label': 'search'}}\r\n                    value={completedInput}\r\n                    onChange={onCompletedChange}\r\n                    fullWidth={true}\r\n                />\r\n                <Button style={{float: 'right'}} color='primary' size='small' onClick={() => props.findRecommendations(getStudentObj())}> Find Recommendations </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default InterestsCard;\r\n"]},"metadata":{},"sourceType":"module"}