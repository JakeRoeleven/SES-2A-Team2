{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\CompletedCourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { AppContext } from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoursesCompleted(props) {\n  _s();\n\n  const data = useContext(AppContext);\n  const [courses, setCourses] = useState([]);\n  const [subjects, setSubjects] = useState({});\n\n  const deleteSubject = subject_code => {\n    // Delete subject from array\n    const index = courses.indexOf(subject_code);\n    let new_courses = courses;\n\n    if (courses.length === 1) {\n      new_courses = [];\n    } else if (index > -1) {\n      new_courses = courses.splice(index, 1);\n    } // Make the student object\n\n\n    let student = {};\n    student['id'] = sessionStorage.getItem('user_id');\n    student[\"student_data\"] = {};\n    student[\"student_data\"]['name'] = props.student.name;\n    student[\"student_data\"]['degree'] = props.student.degree;\n    student[\"student_data\"]['major'] = props.student.major;\n    student[\"student_data\"]['year'] = props.student.year;\n    student[\"student_data\"]['postgraduate'] = props.student.postgraduate;\n    student[\"student_data\"]['interests'] = props.student.interests;\n    student[\"student_data\"]['courses_completed'] = new_courses;\n    console.log(student);\n    let url = 'http://localhost:8080/api/update-student';\n    if (props.student == null) url = 'http://localhost:8080/api/new-student';\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        alert(\"Details updated\");\n        setCourses(new_courses);\n      } else {\n        const error = JSON.parse(await res.json());\n        alert(error);\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  const findSubjects = useCallback(() => {\n    setCourses(props.courses);\n    let subject_obj = {};\n    data.forEach(elem => {\n      if (courses.includes(elem._id)) {\n        subject_obj[elem._id] = elem;\n      }\n    });\n    setSubjects(subject_obj);\n  }, [courses, data, props.courses]);\n  useEffect(() => {\n    findSubjects();\n  }, [findSubjects]);\n\n  if (courses.length > 0 && Object.keys(subjects).length > 0) {\n    return Object.keys(courses).map(index => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        marginBottom: '10px',\n        marginRight: '0.5%'\n      },\n      label: courses[index] + \" - \" + subjects[courses[index]]['course_name'],\n      onDelete: () => deleteSubject(courses[index]),\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Courses Completed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(CoursesCompleted, \"TlTYnxg4PmOkk/lJZFrG9g7OLNw=\");\n\n_c = CoursesCompleted;\nexport default CoursesCompleted;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesCompleted\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/CompletedCourses.js"],"names":["React","useState","useEffect","useContext","useCallback","Chip","AppContext","CoursesCompleted","props","data","courses","setCourses","subjects","setSubjects","deleteSubject","subject_code","index","indexOf","new_courses","length","splice","student","sessionStorage","getItem","name","degree","major","year","postgraduate","interests","console","log","url","fetch","method","body","JSON","stringify","headers","then","res","status","alert","error","parse","json","catch","err","findSubjects","subject_obj","forEach","elem","includes","_id","Object","keys","map","marginBottom","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useCallback} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction CoursesCompleted(props) {\r\n\r\n\t\tconst data = useContext(AppContext);\r\n\r\n\t\tconst [courses, setCourses] = useState([]);\r\n\t\tconst [subjects, setSubjects] = useState({});\r\n\r\n\t\tconst deleteSubject = (subject_code) => {\r\n\t\t\t\r\n\t\t\t// Delete subject from array\r\n\t\t\tconst index = courses.indexOf(subject_code);\r\n\t\t\tlet new_courses = courses\r\n\t\t\tif (courses.length === 1) {\r\n\t\t\t\tnew_courses = []\r\n\t\t\t} else if (index > -1) {\r\n\t\t\t\tnew_courses = courses.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Make the student object\r\n\t\t\tlet student = {}\r\n\t\t\tstudent['id'] =  sessionStorage.getItem('user_id');\r\n\t\t\tstudent[\"student_data\"] = {}\r\n\t\t\tstudent[\"student_data\"]['name'] = props.student.name;\r\n\t\t\tstudent[\"student_data\"]['degree'] = props.student.degree;\r\n\t\t\tstudent[\"student_data\"]['major'] = props.student.major;\r\n\t\t\tstudent[\"student_data\"]['year'] = props.student.year;\r\n\t\t\tstudent[\"student_data\"]['postgraduate'] = props.student.postgraduate;\r\n\t\t\tstudent[\"student_data\"]['interests'] = props.student.interests;\r\n\t\t\tstudent[\"student_data\"]['courses_completed'] = new_courses;\r\n\r\n\t\t\tconsole.log(student)\r\n\r\n\t\t\tlet url = 'http://localhost:8080/api/update-student'\r\n\t\t\tif (props.student == null) url = 'http://localhost:8080/api/new-student'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify(student),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\talert(\"Details updated\")\r\n\t\t\t\t\t\tsetCourses(new_courses)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst error = JSON.parse(await res.json());\r\n\t\t\t\t\t\talert(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\talert(err)\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tconst findSubjects = useCallback(() => {\r\n\t\t\tsetCourses(props.courses)\r\n\t\t\tlet subject_obj = {};\r\n\t\t\tdata.forEach(elem => {\r\n\t\t\t\tif (courses.includes(elem._id)) {\r\n\t\t\t\t\t\tsubject_obj[elem._id] = elem\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSubjects(subject_obj);\r\n\t\t}, [courses, data, props.courses]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tfindSubjects()\r\n\t\t}, [findSubjects]);\r\n\r\n\t\tif (courses.length > 0 && Object.keys(subjects).length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\tObject.keys(courses).map((index) => (\r\n\t\t\t\t\t\t<Chip style={{marginBottom: '10px', marginRight: '0.5%'}} label={courses[index] + \" - \" + subjects[courses[index]]['course_name']}  onDelete={() => deleteSubject(courses[index])} color=\"primary\" />\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<p>No Courses Completed...</p>\r\n\t\t\t)\r\n\t\t}\r\n \r\n}\r\n\r\nexport default CoursesCompleted;\r\n"]},"metadata":{},"sourceType":"module"}