{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; // Import Private Route\n\nimport PrivateRoute from './components/PrivateRoute'; // Import Pages\n\nimport Home from './pages/Home';\nimport Recommendations from './pages/Recommendations';\nimport NavWrapper from './components/MenuSystem';\nimport Search from './pages/Search';\nimport Account from './pages/Account';\nimport LikedCourses from './pages/LikedCourses'; // Firebase Imports\n\nimport firebase from './firebase';\nimport Login from './pages/Auth/Login';\nimport Register from './pages/Auth/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setAuthenticated] = useState(true); // Check if Firebase is initialized\n\n  useEffect(() => {\n    firebase.isInitialized().then(val => {\n      checkAuthenticated();\n    });\n  });\n\n  function checkAuthenticated() {\n    if (firebase.getCurrentUsername() == null) {\n      setAuthenticated(false);\n    } else {\n      setAuthenticated(true);\n    }\n  }\n\n  function setAuth(val) {\n    setAuthenticated(val);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(NavWrapper, {\n          authenticated: isAuthenticated,\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n              authenticated: isAuthenticated,\n              setAuthenticated: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n              authenticated: isAuthenticated,\n              setAuthenticated: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: isAuthenticated,\n            exact: true,\n            path: \"/home\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: isAuthenticated,\n            exact: true,\n            path: \"/recommendations\",\n            component: Recommendations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: isAuthenticated,\n            exact: true,\n            path: \"/search\",\n            component: Search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: isAuthenticated,\n            exact: true,\n            path: \"/account\",\n            component: Account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: isAuthenticated,\n            exact: true,\n            path: \"/liked-courses\",\n            component: LikedCourses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"HULn8Gx5kCsuz7A5xNOHbWKuH2c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","PrivateRoute","Home","Recommendations","NavWrapper","Search","Account","LikedCourses","firebase","Login","Register","App","isAuthenticated","setAuthenticated","isInitialized","then","val","checkAuthenticated","getCurrentUsername","setAuth","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n// Import Private Route\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n// Import Pages\r\nimport Home from './pages/Home';\r\nimport Recommendations from './pages/Recommendations';\r\nimport NavWrapper from './components/MenuSystem';\r\nimport Search from './pages/Search';\r\nimport Account from './pages/Account';\r\nimport LikedCourses from './pages/LikedCourses';\r\n\r\n// Firebase Imports\r\nimport firebase from './firebase';\r\nimport Login from './pages/Auth/Login';\r\nimport Register from './pages/Auth/Register';\r\n\r\nfunction App() {\r\n\r\n\tconst [isAuthenticated, setAuthenticated] = useState(true);\r\n\r\n    // Check if Firebase is initialized\r\n    useEffect(() => {\r\n        firebase.isInitialized().then((val) => {\r\n\t\t\tcheckAuthenticated();\r\n        });\r\n    });\r\n\r\n\tfunction checkAuthenticated() {\r\n\t\tif (firebase.getCurrentUsername() == null) {\r\n\t\t\tsetAuthenticated(false);\r\n\t\t} else {\r\n\t\t\tsetAuthenticated(true);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tfunction setAuth(val) {\r\n\t\tsetAuthenticated(val);\r\n\t}\r\n\r\n\t\r\n\treturn ( \r\n\t\t<>\r\n\t\t    <Router>\r\n\t\t\t\t<Switch > \r\n\t\t\t\t\t<NavWrapper authenticated={isAuthenticated}>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={(props) => ( <Login {...props}  authenticated={isAuthenticated} setAuthenticated={setAuth} /> )} />\r\n\t\t\t\t\t\t<Route exact path=\"/login\" component={(props) => ( <Login {...props}  authenticated={isAuthenticated} setAuthenticated={setAuth} /> )} />\r\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\r\n\t\t\t\t\t\t<PrivateRoute authenticated={isAuthenticated} exact path=\"/home\" component={Home} />\r\n\t\t\t\t\t\t<PrivateRoute authenticated={isAuthenticated} exact path=\"/recommendations\" component={Recommendations} />\r\n\t\t\t\t\t\t<PrivateRoute authenticated={isAuthenticated} exact path=\"/search\" component={Search} />\r\n\t\t\t\t\t\t<PrivateRoute authenticated={isAuthenticated} exact path=\"/account\" component={Account} /> \r\n\t\t\t\t\t\t<PrivateRoute authenticated={isAuthenticated} exact path=\"/liked-courses\" component={LikedCourses} /> \r\n\t\t\t\t\t</NavWrapper>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}