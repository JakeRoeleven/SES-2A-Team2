{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\CompletedCourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { AppContext } from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoursesCompleted(props) {\n  _s();\n\n  const data = useContext(AppContext);\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    console.log(props);\n    setCourses(props.courses);\n  }, []);\n\n  const findSubjects = recommendations => {\n    let subject_obj = {};\n    let subject_ids = recommendations;\n    data.forEach(elem => {\n      if (subject_ids.includes(elem._id)) {\n        subject_obj[elem._id] = elem;\n      }\n    });\n    setResults(subject_obj);\n  };\n\n  console.log(subjects);\n\n  if (courses.length > 0) {\n    console.log('hi');\n    console.log(courses);\n    return Object.keys(courses).map(index => /*#__PURE__*/_jsxDEV(Chip, {\n      label: courses[index],\n      onDelete: () => console.log(\"This\"),\n      color: \"primary\",\n      style: {\n        marginRight: '0.5%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this));\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Courses Completed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(CoursesCompleted, \"X4XorBIhxTBdyjCrLzIm3l8iXOk=\");\n\n_c = CoursesCompleted;\nexport default CoursesCompleted;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesCompleted\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/CompletedCourses.js"],"names":["React","useState","useEffect","useContext","Chip","AppContext","CoursesCompleted","props","data","courses","setCourses","console","log","findSubjects","recommendations","subject_obj","subject_ids","forEach","elem","includes","_id","setResults","subjects","length","Object","keys","map","index","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAMC,IAAI,GAAGL,UAAU,CAACE,UAAD,CAAvB;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAG,IAAAA,UAAU,CAACH,KAAK,CAACE,OAAP,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,YAAY,GAAIC,eAAD,IAAqB;AAExC,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,WAAW,GAAGF,eAAlB;AACAN,IAAAA,IAAI,CAACS,OAAL,CAAaC,IAAI,IAAI;AACjB,UAAIF,WAAW,CAACG,QAAZ,CAAqBD,IAAI,CAACE,GAA1B,CAAJ,EAAoC;AAChCL,QAAAA,WAAW,CAACG,IAAI,CAACE,GAAN,CAAX,GAAwBF,IAAxB;AACH;AACJ,KAJD;AAMAG,IAAAA,UAAU,CAACN,WAAD,CAAV;AAEF,GAZA;;AAcAJ,EAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;;AAEA,MAAIb,OAAO,CAACc,MAAR,GAAiB,CAArB,EAAwB;AACtBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,WACEe,MAAM,CAACC,IAAP,CAAYhB,OAAZ,EAAqBiB,GAArB,CAA0BC,KAAD,iBACrB,QAAC,IAAD;AAAM,MAAA,KAAK,EAAElB,OAAO,CAACkB,KAAD,CAApB;AAA6B,MAAA,QAAQ,EAAE,MAAMhB,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA7C;AAAkE,MAAA,KAAK,EAAC,SAAxE;AAAkF,MAAA,KAAK,EAAE;AAAEgB,QAAAA,WAAW,EAAE;AAAf;AAAzF;AAAA;AAAA;AAAA;AAAA,YADJ,CADF;AAKD,GARD,MAQO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AAEJ;;GAzCQtB,gB;;KAAAA,gB;AA2CT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction CoursesCompleted(props) {\r\n\r\n    const data = useContext(AppContext);\r\n\r\n    const [courses, setCourses] = useState([]);\r\n\r\n    useEffect(() => {\r\n      console.log(props)\r\n      setCourses(props.courses)\r\n    }, []);\r\n\r\n    const findSubjects = (recommendations) => {\r\n\r\n      let subject_obj = {};\r\n      let subject_ids = recommendations;\r\n      data.forEach(elem => {\r\n          if (subject_ids.includes(elem._id)) {\r\n              subject_obj[elem._id] = elem\r\n          }\r\n      })\r\n\r\n      setResults(subject_obj);\r\n\r\n   }\r\n\r\n    console.log(subjects)\r\n\r\n    if (courses.length > 0) {\r\n      console.log('hi')\r\n      console.log(courses)\r\n      return (\r\n        Object.keys(courses).map((index) => (\r\n            <Chip label={courses[index]} onDelete={() => console.log(\"This\")} color=\"primary\" style={{ marginRight: '0.5%' }} />\r\n        ))\r\n      );\r\n    } else {\r\n      return (\r\n        <p>No Courses Completed...</p>\r\n      )\r\n    }\r\n \r\n}\r\n\r\nexport default CoursesCompleted;\r\n"]},"metadata":{},"sourceType":"module"}