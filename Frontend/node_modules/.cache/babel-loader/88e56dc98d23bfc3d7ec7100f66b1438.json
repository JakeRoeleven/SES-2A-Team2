{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Grid, Container, CssBaseline, Typography, Card, TextField, Button, FormControl, InputLabel, Select, MenuItem, CircularProgress } from '@material-ui/core';\nimport { Form } from 'semantic-ui-react';\nimport InterestSelect from '../components/InterestSelects';\nimport MajorSelect from '../components/MajorSelect';\nimport CoursesCompleted from '../components/CompletedCourses';\nimport Alert from '../components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  // UI related state\n  const [loading, setLoading] = useState(true);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(''); // User Details\n\n  const [userDetails, setUserDetails] = useState(null);\n  const [lastname, setLastName] = useState('');\n  const [firstname, setFirstName] = useState('');\n  const [year, setYear] = useState(0);\n  const [degree, setDegree] = useState('');\n  const [faculty, setFaculty] = useState('');\n  const [interests, setInterests] = useState([]);\n  const [displayed_interests, setDisplayedInterests] = useState([]);\n  const [coursesCompleted, setCoursesCompleted] = useState([]); // Convert User Data to State on load\n\n  const convertDetails = async details => {\n    if (details != null) {\n      setUserDetails(details); // Courses Completed\n\n      setCoursesCompleted(details['courses_completed']); // Name stuff\n\n      let name = details['name'].split(' ');\n      setFirstName(name[0]);\n      setLastName(name[1]); // Year\n\n      setYear(details['year']); // Degree\n\n      setDegree(details['degree']); // Major\n\n      setFaculty(details['major']); // Interests stuff - TODO: Find a better solution\n\n      setInterests(details['interests']);\n      let interests_obj_array = [];\n      details['interests'].forEach(elem => {\n        interests_obj_array.push({\n          value: elem,\n          label: elem\n        });\n      });\n      setDisplayedInterests(interests_obj_array);\n    }\n  }; // Get student details from database\n\n\n  const fetchStudent = useCallback(async () => {\n    let id = sessionStorage.getItem('user_id');\n\n    if (id != null) {\n      fetch(`http://localhost:8080/api/student/${id}`, {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(async res => {\n        let data = await res.json();\n        convertDetails(data);\n        setLoading(false);\n      }).catch(() => {\n        setAlertMessage('Error: We could not find your account details, please try again!');\n        setShowAlert(true);\n        setLoading(false);\n      });\n    }\n  }, []); // Validate and Format Student Data\n\n  const getFormattedStudentData = () => {\n    let student = {};\n    let id = sessionStorage.getItem('user_id'); // Validation checks\n    // TODO: SOmething nicer\n\n    if (firstname.length < 1) {\n      setAlertMessage('Warning: First Name cannot be empty!');\n      setShowAlert(true);\n      return false;\n    }\n\n    if (lastname.length < 1) {\n      setAlertMessage('Warning: Last Name cannot be empty!');\n      setShowAlert(true);\n      return false;\n    }\n\n    if (degree.length < 1) {\n      setAlertMessage('Warning: Degree cannot be empty!');\n      setShowAlert(true);\n      return false;\n    }\n\n    if (faculty.length < 1) {\n      setAlertMessage('Warning: Please choose a faculty!');\n      setShowAlert(true);\n      return false;\n    }\n\n    if (interests.length < 1) {\n      setAlertMessage('Warning: Please choose at least one interest!');\n      setShowAlert(true);\n      return false;\n    }\n\n    if (year === null) {\n      setAlertMessage('Warning: Year cannot be empty!');\n      setShowAlert(true);\n      return false;\n    }\n\n    student['id'] = id;\n    student['student_data'] = {};\n    student['student_data']['name'] = firstname.concat(' ').concat(lastname);\n    student['student_data']['degree'] = degree;\n    student['student_data']['major'] = faculty;\n    student['student_data']['year'] = year;\n    student['student_data']['postgraduate'] = false;\n    student['student_data']['interests'] = interests;\n    return student;\n  }; // Post updated student details to database\n\n\n  const submitAccountUpdate = () => {\n    // Get the correctly formatted student data\n    let student_data = getFormattedStudentData();\n\n    if (student_data !== false) {\n      // TODO: Handle this in backend\n      let url = 'http://localhost:8080/api/update-student';\n      if (userDetails == null) url = 'http://localhost:8080/api/new-student'; // Send to database\n\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(student_data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(async res => {\n        if (res.status === 200) {\n          setAlertMessage('Success: Your account details were updated!');\n          setShowAlert(true);\n          fetchStudent();\n        } else {\n          setAlertMessage('Error: We failed to update your account!');\n          setShowAlert(true);\n        }\n      }).catch(err => {\n        setAlertMessage('Error: We failed to update your account!');\n        setShowAlert(true);\n      });\n    }\n  }; // Called when component mounts/updates\n\n\n  useEffect(() => {\n    if (userDetails == null) {\n      fetchStudent();\n    } else {\n      setLoading(false);\n    }\n  }, [fetchStudent, setLoading, userDetails]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \" Edit Your Account \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: '2%',\n            overflow: 'visible',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        open: showAlert,\n        close: setShowAlert,\n        message: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \" Edit Your Account \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: '2%',\n            overflow: 'visible'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"First Name\",\n              defaultValue: firstname,\n              value: firstname,\n              onChange: event => setFirstName(event.target.value),\n              variant: \"outlined\",\n              style: {\n                marginRight: '2%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"Last Name\",\n              defaultValue: lastname,\n              value: lastname,\n              onChange: event => setLastName(event.target.value),\n              variant: \"outlined\",\n              style: {\n                marginRight: '2%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              style: {\n                minWidth: '120px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-age-native-simple\",\n                children: \"Degree Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: year,\n                value: year,\n                onChange: e => setYear(e.target.value),\n                label: \"Degree Year\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 1,\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 2,\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 3,\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 4,\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 5,\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 6,\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"Degree\",\n              defaultValue: degree,\n              value: degree,\n              fullWidth: \"true\",\n              onChange: event => setDegree(event.target.value),\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '1.2em',\n                marginBottom: '10px'\n              },\n              variant: \"h6\",\n              children: \"Your Faculty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MajorSelect, {\n              setMajor: setFaculty,\n              major: faculty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '1.2em',\n                marginBottom: '10px'\n              },\n              variant: \"h6\",\n              children: \"Your Interests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InterestSelect, {\n              displayed_interests: displayed_interests,\n              setCurrentInterests: setInterests,\n              setDisplayedInterests: setDisplayedInterests\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              float: 'right'\n            },\n            onClick: () => submitAccountUpdate(),\n            children: [' ', \"Update Account\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '1.2em'\n            },\n            variant: \"h6\",\n            children: \"Courses You Have Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CoursesCompleted, {\n            courses: coursesCompleted,\n            student: userDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        open: showAlert,\n        close: setShowAlert,\n        message: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Account, \"HRRy1sR3apyXMFiZxz4rJqNwRKE=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Account.js"],"names":["React","useState","useEffect","useCallback","Grid","Container","CssBaseline","Typography","Card","TextField","Button","FormControl","InputLabel","Select","MenuItem","CircularProgress","Form","InterestSelect","MajorSelect","CoursesCompleted","Alert","Account","loading","setLoading","showAlert","setShowAlert","alertMessage","setAlertMessage","userDetails","setUserDetails","lastname","setLastName","firstname","setFirstName","year","setYear","degree","setDegree","faculty","setFaculty","interests","setInterests","displayed_interests","setDisplayedInterests","coursesCompleted","setCoursesCompleted","convertDetails","details","name","split","interests_obj_array","forEach","elem","push","value","label","fetchStudent","id","sessionStorage","getItem","fetch","crossDomain","mode","method","headers","then","res","data","json","catch","getFormattedStudentData","student","length","concat","submitAccountUpdate","student_data","url","body","JSON","stringify","status","err","padding","overflow","textAlign","event","target","marginRight","minWidth","e","fontSize","marginBottom","float"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport {Grid, Container, CssBaseline, Typography, Card, TextField, Button, FormControl, InputLabel, Select, MenuItem, CircularProgress} from '@material-ui/core';\r\n\r\nimport {Form} from 'semantic-ui-react';\r\nimport InterestSelect from '../components/InterestSelects';\r\nimport MajorSelect from '../components/MajorSelect';\r\nimport CoursesCompleted from '../components/CompletedCourses';\r\nimport Alert from '../components/Alert';\r\n\r\nfunction Account() {\r\n    // UI related state\r\n    const [loading, setLoading] = useState(true);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    // User Details\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [lastname, setLastName] = useState('');\r\n    const [firstname, setFirstName] = useState('');\r\n    const [year, setYear] = useState(0);\r\n    const [degree, setDegree] = useState('');\r\n    const [faculty, setFaculty] = useState('');\r\n    const [interests, setInterests] = useState([]);\r\n    const [displayed_interests, setDisplayedInterests] = useState([]);\r\n    const [coursesCompleted, setCoursesCompleted] = useState([]);\r\n\r\n    // Convert User Data to State on load\r\n    const convertDetails = async (details) => {\r\n        if (details != null) {\r\n            setUserDetails(details);\r\n\r\n            // Courses Completed\r\n            setCoursesCompleted(details['courses_completed']);\r\n\r\n            // Name stuff\r\n            let name = details['name'].split(' ');\r\n            setFirstName(name[0]);\r\n            setLastName(name[1]);\r\n\r\n            // Year\r\n            setYear(details['year']);\r\n\r\n            // Degree\r\n            setDegree(details['degree']);\r\n\r\n            // Major\r\n            setFaculty(details['major']);\r\n\r\n            // Interests stuff - TODO: Find a better solution\r\n            setInterests(details['interests']);\r\n            let interests_obj_array = [];\r\n            details['interests'].forEach((elem) => {\r\n                interests_obj_array.push({value: elem, label: elem});\r\n            });\r\n\r\n            setDisplayedInterests(interests_obj_array);\r\n        }\r\n    };\r\n\r\n    // Get student details from database\r\n    const fetchStudent = useCallback(async () => {\r\n        let id = sessionStorage.getItem('user_id');\r\n        if (id != null) {\r\n            fetch(`http://localhost:8080/api/student/${id}`, {\r\n                crossDomain: true,\r\n                mode: 'cors',\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                },\r\n            })\r\n                .then(async (res) => {\r\n                    let data = await res.json();\r\n                    convertDetails(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(() => {\r\n                    setAlertMessage('Error: We could not find your account details, please try again!');\r\n                    setShowAlert(true);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    // Validate and Format Student Data\r\n    const getFormattedStudentData = () => {\r\n        let student = {};\r\n        let id = sessionStorage.getItem('user_id');\r\n\r\n        // Validation checks\r\n        // TODO: SOmething nicer\r\n        if (firstname.length < 1) {\r\n            setAlertMessage('Warning: First Name cannot be empty!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        if (lastname.length < 1) {\r\n            setAlertMessage('Warning: Last Name cannot be empty!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        if (degree.length < 1) {\r\n            setAlertMessage('Warning: Degree cannot be empty!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        if (faculty.length < 1) {\r\n            setAlertMessage('Warning: Please choose a faculty!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        if (interests.length < 1) {\r\n            setAlertMessage('Warning: Please choose at least one interest!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        if (year === null) {\r\n            setAlertMessage('Warning: Year cannot be empty!');\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n\r\n        student['id'] = id;\r\n        student['student_data'] = {};\r\n        student['student_data']['name'] = firstname.concat(' ').concat(lastname);\r\n        student['student_data']['degree'] = degree;\r\n        student['student_data']['major'] = faculty;\r\n        student['student_data']['year'] = year;\r\n        student['student_data']['postgraduate'] = false;\r\n        student['student_data']['interests'] = interests;\r\n\r\n        return student;\r\n    };\r\n\r\n    // Post updated student details to database\r\n    const submitAccountUpdate = () => {\r\n        // Get the correctly formatted student data\r\n        let student_data = getFormattedStudentData();\r\n        if (student_data !== false) {\r\n            // TODO: Handle this in backend\r\n            let url = 'http://localhost:8080/api/update-student';\r\n            if (userDetails == null) url = 'http://localhost:8080/api/new-student';\r\n\r\n            // Send to database\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(student_data),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(async (res) => {\r\n                    if (res.status === 200) {\r\n                        setAlertMessage('Success: Your account details were updated!');\r\n                        setShowAlert(true);\r\n                        fetchStudent();\r\n                    } else {\r\n                        setAlertMessage('Error: We failed to update your account!');\r\n                        setShowAlert(true);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setAlertMessage('Error: We failed to update your account!');\r\n                    setShowAlert(true);\r\n                });\r\n        }\r\n    };\r\n\r\n    // Called when component mounts/updates\r\n    useEffect(() => {\r\n        if (userDetails == null) {\r\n            fetchStudent();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [fetchStudent, setLoading, userDetails]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'> Edit Your Account </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Card style={{padding: '2%', overflow: 'visible', textAlign: 'center'}}>\r\n                        <CircularProgress />\r\n                    </Card>\r\n                </Container>\r\n                <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'> Edit Your Account </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Card style={{padding: '2%', overflow: 'visible'}}>\r\n                        <Form>\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='First Name'\r\n                                defaultValue={firstname}\r\n                                value={firstname}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                                variant='outlined'\r\n                                style={{marginRight: '2%'}}\r\n                            />\r\n\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='Last Name'\r\n                                defaultValue={lastname}\r\n                                value={lastname}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                                variant='outlined'\r\n                                style={{marginRight: '2%'}}\r\n                            />\r\n\r\n                            <FormControl variant='outlined' style={{minWidth: '120px'}}>\r\n                                <InputLabel htmlFor='outlined-age-native-simple'>Degree Year</InputLabel>\r\n                                <Select defaultValue={year} value={year} onChange={(e) => setYear(e.target.value)} label='Degree Year'>\r\n                                    <MenuItem value={1}>1</MenuItem>\r\n                                    <MenuItem value={2}>2</MenuItem>\r\n                                    <MenuItem value={3}>3</MenuItem>\r\n                                    <MenuItem value={4}>4</MenuItem>\r\n                                    <MenuItem value={5}>5</MenuItem>\r\n                                    <MenuItem value={6}>6</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <br />\r\n                            <br />\r\n\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='Degree'\r\n                                defaultValue={degree}\r\n                                value={degree}\r\n                                fullWidth='true'\r\n                                onChange={(event) => setDegree(event.target.value)}\r\n                                variant='outlined'\r\n                            />\r\n\r\n                            <br />\r\n                            <br />\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: '1.2em',\r\n                                    marginBottom: '10px',\r\n                                }}\r\n                                variant='h6'\r\n                            >\r\n                                Your Faculty\r\n                            </Typography>\r\n                            <MajorSelect setMajor={setFaculty} major={faculty} />\r\n                            <br />\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: '1.2em',\r\n                                    marginBottom: '10px',\r\n                                }}\r\n                                variant='h6'\r\n                            >\r\n                                Your Interests\r\n                            </Typography>\r\n                            <InterestSelect displayed_interests={displayed_interests} setCurrentInterests={setInterests} setDisplayedInterests={setDisplayedInterests} />\r\n                        </Form>\r\n                        <br />\r\n                        <br />\r\n                        <Button style={{float: 'right'}} onClick={() => submitAccountUpdate()}>\r\n                            {' '}\r\n                            Update Account{' '}\r\n                        </Button>\r\n                        <br />\r\n                        <br />\r\n                        <Typography style={{fontSize: '1.2em'}} variant='h6'>\r\n                            Courses You Have Completed\r\n                        </Typography>\r\n                        <br />\r\n                        <CoursesCompleted courses={coursesCompleted} student={userDetails} />\r\n                    </Card>\r\n                </Container>\r\n\r\n                <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}