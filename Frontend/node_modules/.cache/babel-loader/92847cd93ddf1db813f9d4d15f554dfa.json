{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Grid, Container, CssBaseline, Typography, Card, TextField, Button, FormControl, InputLabel, Select, MenuItem, CircularProgress } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Form } from 'semantic-ui-react';\nimport InterestSelect from '../components/InterestSelects';\nimport MajorSelect from '../components/MajorSelect';\nimport CoursesCompleted from '../components/CompletedCourses';\nimport Alert from '../components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  // UI related state\n  const [loading, setLoading] = useState(true);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(''); // User Details\n\n  const [userDetails, setUserDetails] = useState(null);\n  const [lastname, setLastName] = useState('Last Name');\n  const [firstname, setFirstName] = useState('Last Name');\n  const [year, setYear] = useState(0);\n  const [degree, setDegree] = useState('Your Degree');\n  const [faculty, setFaculty] = useState('Your Faculty');\n  const [interests, setInterests] = useState([]);\n  const [displayed_interests, setDisplayedInterests] = useState([]);\n  const [coursesCompleted, setCoursesCompleted] = useState([]); // Convert User Data to State on load\n\n  const convertDetails = async details => {\n    if (details != null) {\n      setUserDetails(details); // Courses Completed\n\n      setCoursesCompleted(details['courses_completed']); // Name stuff\n\n      let name = details['name'].split(' ');\n      setFirstName(name[0]);\n      setLastName(name[1]); // Year\n\n      setYear(details['year']); // Degree\n\n      setDegree(details['degree']); // Major\n\n      setFaculty(details['major']); // Interests stuff - TODO: Find a better solution\n\n      setInterests(details['interests']);\n      let interests_obj_array = [];\n      details['interests'].forEach(elem => {\n        interests_obj_array.push({\n          value: elem,\n          label: elem\n        });\n      });\n      setDisplayedInterests(interests_obj_array);\n    }\n  }; // Get student details from database\n\n\n  const fetchStudent = useCallback(async () => {\n    let id = sessionStorage.getItem('user_id');\n\n    if (id != null) {\n      fetch(`http://localhost:8080/api/student/${id}`, {\n        crossDomain: true,\n        mode: 'cors',\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(async res => {\n        debugger;\n        let data = await res.json();\n        convertDetails(data);\n        setLoading(false);\n      }).catch(err => {\n        debugger;\n        console.log(err);\n        setLoading(false);\n      });\n    }\n  }, []); // Validate and Format Student Data\n\n  const getFormattedStudentData = () => {\n    let student = {}; // Push id from firebase\n\n    let id = sessionStorage.getItem('user_id');\n    student['id'] = id;\n    student['student_data'] = {};\n    student['student_data']['name'] = firstname.concat(' ').concat(lastname); //TODO: Need degrees\n\n    student['student_data']['degree'] = degree;\n    student['student_data']['major'] = faculty;\n    student['student_data']['year'] = year;\n    student['student_data']['postgraduate'] = false;\n    student['student_data']['interests'] = interests;\n    return student;\n  }; // Post updated student details to database\n\n\n  const submitAccountUpdate = () => {\n    // Get the correctly formatted student data\n    let student_data = getFormattedStudentData(); // TODO: Handle this in backend\n\n    let url = 'http://localhost:8080/api/update-student';\n    if (userDetails == null) url = 'http://localhost:8080/api/new-student'; // Send to database\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(student_data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        setAlertMessage('Success: Your account details were updated!');\n        setShowAlert(true);\n        fetchStudent();\n      } else {\n        setAlertMessage(\"Error: We failed to update your account!\");\n        setShowAlert(true);\n      }\n    }).catch(err => {\n      setAlertMessage(\"Error: We failed to update your account!\");\n      setShowAlert(true);\n    });\n  }; // Called when component mounts/updates\n\n\n  useEffect(() => {\n    if (userDetails == null) {\n      fetchStudent();\n    } else {\n      setLoading(false);\n    }\n  }, [fetchStudent, setLoading, userDetails]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: [' ', \"Edit Your Account\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: '2%',\n            overflow: 'visible',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: [' ', \"Edit Your Account\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: '2%',\n            overflow: 'visible'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"First Name\",\n              defaultValue: firstname,\n              value: firstname,\n              onChange: event => setFirstName(event.target.value),\n              variant: \"outlined\",\n              style: {\n                marginRight: '2%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"Last Name\",\n              defaultValue: lastname,\n              value: lastname,\n              onChange: event => setLastName(event.target.value),\n              variant: \"outlined\",\n              style: {\n                marginRight: '2%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              style: {\n                minWidth: '120px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-age-native-simple\",\n                children: \"Degree Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: year,\n                value: year,\n                onChange: e => setYear(e.target.value),\n                label: \"Degree Year\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 1,\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 2,\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 3,\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 4,\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 5,\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 6,\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-disabled\",\n              label: \"Degree\",\n              defaultValue: degree,\n              value: degree,\n              fullWidth: \"true\",\n              onChange: event => setDegree(event.target.value),\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '1.2em',\n                marginBottom: '10px'\n              },\n              variant: \"h6\",\n              children: \"Your Faculty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MajorSelect, {\n              setMajor: setFaculty,\n              major: faculty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '1.2em',\n                marginBottom: '10px'\n              },\n              variant: \"h6\",\n              children: \"Your Interests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InterestSelect, {\n              displayed_interests: displayed_interests,\n              setCurrentInterests: setInterests,\n              setDisplayedInterests: setDisplayedInterests\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              float: 'right'\n            },\n            onClick: () => submitAccountUpdate(),\n            children: [' ', \"Update Account\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '1.2em'\n            },\n            variant: \"h6\",\n            children: \"Courses You Have Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CoursesCompleted, {\n            courses: coursesCompleted,\n            student: userDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        open: showAlert,\n        close: setShowAlert,\n        message: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Account, \"OgEXXGvTzmKma99G9F9DaUaC8is=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Account.js"],"names":["React","useState","useEffect","useCallback","Grid","Container","CssBaseline","Typography","Card","TextField","Button","FormControl","InputLabel","Select","MenuItem","CircularProgress","IconButton","CloseIcon","Snackbar","Form","InterestSelect","MajorSelect","CoursesCompleted","Alert","Account","loading","setLoading","showAlert","setShowAlert","alertMessage","setAlertMessage","userDetails","setUserDetails","lastname","setLastName","firstname","setFirstName","year","setYear","degree","setDegree","faculty","setFaculty","interests","setInterests","displayed_interests","setDisplayedInterests","coursesCompleted","setCoursesCompleted","convertDetails","details","name","split","interests_obj_array","forEach","elem","push","value","label","fetchStudent","id","sessionStorage","getItem","fetch","crossDomain","mode","method","headers","then","res","data","json","catch","err","console","log","getFormattedStudentData","student","concat","submitAccountUpdate","student_data","url","body","JSON","stringify","status","padding","overflow","textAlign","event","target","marginRight","minWidth","e","fontSize","marginBottom","float"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    CssBaseline,\r\n    Typography,\r\n    Card,\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {Form} from 'semantic-ui-react';\r\n\r\nimport InterestSelect from '../components/InterestSelects';\r\nimport MajorSelect from '../components/MajorSelect';\r\nimport CoursesCompleted from '../components/CompletedCourses';\r\nimport Alert from '../components/Alert';\r\n\r\nfunction Account() {\r\n\r\n    // UI related state\r\n    const [loading, setLoading] = useState(true);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    // User Details\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [lastname, setLastName] = useState('Last Name');\r\n    const [firstname, setFirstName] = useState('Last Name');\r\n    const [year, setYear] = useState(0);\r\n    const [degree, setDegree] = useState('Your Degree');\r\n    const [faculty, setFaculty] = useState('Your Faculty');\r\n    const [interests, setInterests] = useState([]);\r\n    const [displayed_interests, setDisplayedInterests] = useState([]);\r\n    const [coursesCompleted, setCoursesCompleted] = useState([]);\r\n\r\n\r\n    // Convert User Data to State on load\r\n    const convertDetails = async (details) => {\r\n        \r\n        if (details != null) {\r\n            \r\n            setUserDetails(details);\r\n\r\n            // Courses Completed\r\n            setCoursesCompleted(details['courses_completed']);\r\n\r\n            // Name stuff\r\n            let name = details['name'].split(' ');\r\n            setFirstName(name[0]);\r\n            setLastName(name[1]);\r\n\r\n            // Year\r\n            setYear(details['year']);\r\n\r\n            // Degree\r\n            setDegree(details['degree']);\r\n\r\n            // Major\r\n            setFaculty(details['major']);\r\n\r\n            // Interests stuff - TODO: Find a better solution\r\n            setInterests(details['interests']);\r\n            let interests_obj_array = [];\r\n            details['interests'].forEach((elem) => {\r\n                interests_obj_array.push({value: elem, label: elem});\r\n            });\r\n\r\n            setDisplayedInterests(interests_obj_array);\r\n        \r\n        }\r\n    };\r\n\r\n    // Get student details from database\r\n    const fetchStudent = useCallback(async () => {\r\n        let id = sessionStorage.getItem('user_id');\r\n        if (id != null) {\r\n            fetch(`http://localhost:8080/api/student/${id}`, {\r\n                crossDomain: true,\r\n                mode: 'cors',\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                },\r\n            })\r\n                .then(async (res) => {\r\n                    debugger;\r\n                    let data = await res.json();\r\n                    convertDetails(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    debugger;\r\n                    console.log(err);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    // Validate and Format Student Data\r\n    const getFormattedStudentData = () => {\r\n        let student = {};\r\n\r\n        // Push id from firebase\r\n        let id = sessionStorage.getItem('user_id');\r\n\r\n        student['id'] = id;\r\n\r\n        student['student_data'] = {};\r\n        student['student_data']['name'] = firstname\r\n            .concat(' ')\r\n            .concat(lastname);\r\n\r\n        //TODO: Need degrees\r\n        student['student_data']['degree'] = degree;\r\n        student['student_data']['major'] = faculty;\r\n        student['student_data']['year'] = year;\r\n        student['student_data']['postgraduate'] = false;\r\n        student['student_data']['interests'] = interests;\r\n\r\n        return student;\r\n    };\r\n\r\n    // Post updated student details to database\r\n    const submitAccountUpdate = () => {\r\n        \r\n        // Get the correctly formatted student data\r\n        let student_data = getFormattedStudentData();\r\n\r\n        // TODO: Handle this in backend\r\n        let url = 'http://localhost:8080/api/update-student';\r\n        if (userDetails == null) url = 'http://localhost:8080/api/new-student';\r\n\r\n        // Send to database\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(student_data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(async (res) => {\r\n                if (res.status === 200) {\r\n                    setAlertMessage('Success: Your account details were updated!')\r\n                    setShowAlert(true)\r\n                    fetchStudent();\r\n                } else {\r\n                    setAlertMessage(\"Error: We failed to update your account!\")\r\n                    setShowAlert(true)\r\n                }\r\n        }).catch((err) => {\r\n            setAlertMessage(\"Error: We failed to update your account!\")\r\n            setShowAlert(true)\r\n        });\r\n\r\n    };\r\n\r\n\r\n    // Called when component mounts/updates\r\n    useEffect(() => {\r\n        if (userDetails == null) {\r\n            fetchStudent();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, [fetchStudent, setLoading, userDetails]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'>\r\n                                {' '}\r\n                                Edit Your Account{' '}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Card\r\n                        style={{\r\n                            padding: '2%',\r\n                            overflow: 'visible',\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        <CircularProgress />\r\n                    </Card>\r\n                </Container>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                <Container maxWidth={false}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <Typography variant='h5'>\r\n                                {' '}\r\n                                Edit Your Account{' '}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Card style={{padding: '2%', overflow: 'visible'}}>\r\n                        <Form>\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='First Name'\r\n                                defaultValue={firstname}\r\n                                value={firstname}\r\n                                onChange={(event) =>\r\n                                    setFirstName(event.target.value)\r\n                                }\r\n                                variant='outlined'\r\n                                style={{marginRight: '2%'}}\r\n                            />\r\n\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='Last Name'\r\n                                defaultValue={lastname}\r\n                                value={lastname}\r\n                                onChange={(event) =>\r\n                                    setLastName(event.target.value)\r\n                                }\r\n                                variant='outlined'\r\n                                style={{marginRight: '2%'}}\r\n                            />\r\n\r\n                            <FormControl\r\n                                variant='outlined'\r\n                                style={{minWidth: '120px'}}\r\n                            >\r\n                                <InputLabel htmlFor='outlined-age-native-simple'>\r\n                                    Degree Year\r\n                                </InputLabel>\r\n                                <Select\r\n                                    defaultValue={year}\r\n                                    value={year}\r\n                                    onChange={(e) => setYear(e.target.value)}\r\n                                    label='Degree Year'\r\n                                >\r\n                                    <MenuItem value={1}>1</MenuItem>\r\n                                    <MenuItem value={2}>2</MenuItem>\r\n                                    <MenuItem value={3}>3</MenuItem>\r\n                                    <MenuItem value={4}>4</MenuItem>\r\n                                    <MenuItem value={5}>5</MenuItem>\r\n                                    <MenuItem value={6}>6</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <br />\r\n                            <br />\r\n\r\n                            <TextField\r\n                                id='outlined-disabled'\r\n                                label='Degree'\r\n                                defaultValue={degree}\r\n                                value={degree}\r\n                                fullWidth='true'\r\n                                onChange={(event) =>\r\n                                    setDegree(event.target.value)\r\n                                }\r\n                                variant='outlined'\r\n                            />\r\n\r\n                            <br />\r\n                            <br />\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: '1.2em',\r\n                                    marginBottom: '10px',\r\n                                }}\r\n                                variant='h6'\r\n                            >\r\n                                Your Faculty\r\n                            </Typography>\r\n                            <MajorSelect\r\n                                setMajor={setFaculty}\r\n                                major={faculty}\r\n                            />\r\n                            <br />\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: '1.2em',\r\n                                    marginBottom: '10px',\r\n                                }}\r\n                                variant='h6'\r\n                            >\r\n                                Your Interests\r\n                            </Typography>\r\n                            <InterestSelect\r\n                                displayed_interests={displayed_interests}\r\n                                setCurrentInterests={setInterests}\r\n                                setDisplayedInterests={setDisplayedInterests}\r\n                            />\r\n                        </Form>\r\n                        <br />\r\n                        <br />\r\n                        <Button\r\n                            style={{float: 'right'}}\r\n                            onClick={() => submitAccountUpdate()}\r\n                        >\r\n                            {' '}\r\n                            Update Account{' '}\r\n                        </Button>\r\n                        <br />\r\n                        <br />\r\n                        <Typography style={{fontSize: '1.2em'}} variant='h6'>\r\n                            Courses You Have Completed\r\n                        </Typography>\r\n                        <br />\r\n                        <CoursesCompleted\r\n                            courses={coursesCompleted}\r\n                            student={userDetails}\r\n                        />\r\n                    </Card>\r\n                </Container>\r\n\r\n                <Alert open={showAlert} close={setShowAlert} message={alertMessage}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}