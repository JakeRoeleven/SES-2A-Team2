{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport SearchHandler from '../lib/searchHandler.js';\nimport SubjectCard from '../components/SubjectCard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { AppContext } from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n\nfunction Search() {\n  _s();\n\n  const data = useContext(AppContext);\n  const classes = useStyles();\n  const [subjects, setSubjects] = useState({});\n  const [results, setResults] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n\n  const searchSubjects = async key => {\n    setResults({});\n    let searchHandler = new SearchHandler(subjects);\n    let searchResults = await searchHandler.searchAllSubjects(key);\n    setResults(searchResults);\n  };\n\n  const onChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  useEffect(() => {\n    setSubjects(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \" Subject List Search \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          alignItems: 'flex-end',\n          alignContent: 'flex-end',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.search,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchIcon,\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              placeholder: \"Search\\u2026\",\n              classes: {\n                root: classes.inputRoot,\n                input: classes.inputInput\n              },\n              inputProps: {\n                'aria-label': 'search'\n              },\n              value: searchValue,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => searchSubjects(searchValue),\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), Object.keys(results).slice(0, 5).map((subject, key) => /*#__PURE__*/_jsxDEV(SubjectCard, {\n        subject: results[subject]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"WPmCf3J/Af96EudseHBYBxZBaLY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Search.js"],"names":["React","useState","useEffect","useCallback","useContext","CssBaseline","Typography","Container","Grid","InputBase","fade","makeStyles","SearchIcon","Button","SearchHandler","SubjectCard","CircularProgress","AppContext","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","data","classes","subjects","setSubjects","results","setResults","searchValue","setSearchValue","searchSubjects","key","searchHandler","searchResults","searchAllSubjects","onChange","event","target","value","input","Object","keys","slice","map","subject"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useContext} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchHandler from '../lib/searchHandler.js';\r\nimport SubjectCard from '../components/SubjectCard';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AppContext } from '../AppContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction Search() {\r\n\r\n    const data = useContext(AppContext);\r\n\r\n    const classes = useStyles();\r\n    const [subjects, setSubjects] = useState({});\r\n    const [results, setResults] = useState({});\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const searchSubjects = async (key) => {\r\n        setResults({});\r\n        let searchHandler = new SearchHandler(subjects);\r\n        let searchResults = await searchHandler.searchAllSubjects(key);\r\n        setResults(searchResults)\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSubjects(data)\r\n    }, [data]);\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                    <Typography variant='h5'> Subject List Search </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} alignItems={'flex-end'} alignContent={'flex-end'}>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder='Search…'\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{'aria-label': 'search'}}\r\n                            value={searchValue}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Button variant=\"contained\" onClick={() => searchSubjects(searchValue)}>Search</Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n                <Typography />\r\n                <br />\r\n                {Object.keys(results).slice(0, 5).map((subject, key) => (\r\n                    <SubjectCard key={key} subject={results[subject]} />\r\n                ))}\r\n            </Container>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}