{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\components\\\\CompletedCourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { AppContext } from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoursesCompleted(props) {\n  _s();\n\n  const data = useContext(AppContext);\n  const [courses, setCourses] = useState([]);\n  const [subjects, setSubjects] = useState({});\n\n  const deleteSubject = subject_code => {\n    console.log(subject_code);\n    console.log(props.student); // Delete subject from array\n\n    const index = courses.indexOf(subject_code);\n    let new_courses = courses;\n\n    if (index > -1) {\n      new_courses = courses.splice(index, 1);\n    } // Make the student object\n\n\n    let student = {};\n    student['id'] = props.student._id;\n    student[\"student_data\"] = {};\n    student[\"student_data\"]['name'] = props.student.name;\n    student[\"student_data\"]['degree'] = props.student.degree;\n    student[\"student_data\"]['major'] = props.student.major;\n    student[\"student_data\"]['year'] = props.student.year;\n    student[\"student_data\"]['postgraduate'] = props.student.postgraduate;\n    student[\"student_data\"]['interests'] = props.student.interests;\n    student[\"student_data\"]['courses_completed'] = new_courses;\n    console.log(student);\n    fetch('http://localhost:8080/api/update-student', {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        alert(\"Details updated\");\n      } else {\n        const error = JSON.parse(await res.json());\n        alert(error);\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  const findSubjects = () => {\n    setCourses(props.courses);\n    let subject_obj = {};\n    data.forEach(elem => {\n      if (courses.includes(elem._id)) {\n        subject_obj[elem._id] = elem;\n      }\n    });\n    setSubjects(subject_obj);\n  };\n\n  useEffect(() => {\n    if (courses != props.courses) findSubjects();\n  }, [findSubjects, setCourses, setSubjects]);\n\n  if (courses.length > 0 && Object.keys(subjects).length > 0) {\n    console.log('hi');\n    console.log(courses);\n    return Object.keys(courses).map(index => /*#__PURE__*/_jsxDEV(Chip, {\n      label: courses[index] + \" - \" + subjects[courses[index]]['course_name'],\n      onDelete: () => deleteSubject(courses[index]),\n      color: \"primary\",\n      style: {\n        marginRight: '0.5%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this));\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Courses Completed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(CoursesCompleted, \"TWB68x1lx5TbCH65LHp2+uAG40w=\");\n\n_c = CoursesCompleted;\nexport default CoursesCompleted;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesCompleted\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/components/CompletedCourses.js"],"names":["React","useState","useEffect","useContext","Chip","AppContext","CoursesCompleted","props","data","courses","setCourses","subjects","setSubjects","deleteSubject","subject_code","console","log","student","index","indexOf","new_courses","splice","_id","name","degree","major","year","postgraduate","interests","fetch","method","body","JSON","stringify","headers","then","res","status","alert","error","parse","json","catch","err","findSubjects","subject_obj","forEach","elem","includes","length","Object","keys","map","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AppContext } from '../AppContext';\r\n\r\nfunction CoursesCompleted(props) {\r\n\r\n\t\tconst data = useContext(AppContext);\r\n\r\n\t\tconst [courses, setCourses] = useState([]);\r\n\t\tconst [subjects, setSubjects] = useState({});\r\n\r\n\t\tconst deleteSubject = (subject_code) => {\r\n\t\t\tconsole.log(subject_code)\r\n\t\t\tconsole.log(props.student)\r\n\r\n\t\t\t// Delete subject from array\r\n\t\t\tconst index = courses.indexOf(subject_code);\r\n\t\t\tlet new_courses = courses\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tnew_courses = courses.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Make the student object\r\n\t\t\tlet student = {}\r\n\t\t\tstudent['id'] = props.student._id;\r\n\t\t\tstudent[\"student_data\"] = {}\r\n\t\t\tstudent[\"student_data\"]['name'] = props.student.name;\r\n\t\t\tstudent[\"student_data\"]['degree'] = props.student.degree;\r\n\t\t\tstudent[\"student_data\"]['major'] = props.student.major;\r\n\t\t\tstudent[\"student_data\"]['year'] = props.student.year;\r\n\t\t\tstudent[\"student_data\"]['postgraduate'] = props.student.postgraduate;\r\n\t\t\tstudent[\"student_data\"]['interests'] = props.student.interests;\r\n\t\t\tstudent[\"student_data\"]['courses_completed'] = new_courses;\r\n\r\n\t\t\tconsole.log(student)\r\n\r\n\t\t\tfetch('http://localhost:8080/api/update-student', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify(student),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\talert(\"Details updated\")\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst error = JSON.parse(await res.json());\r\n\t\t\t\t\t\talert(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\talert(err)\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tconst findSubjects = () => {\r\n\t\t\tsetCourses(props.courses)\r\n\t\t\tlet subject_obj = {};\r\n\t\t\tdata.forEach(elem => {\r\n\t\t\t\t\tif (courses.includes(elem._id)) {\r\n\t\t\t\t\t\t\tsubject_obj[elem._id] = elem\r\n\t\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSubjects(subject_obj);\r\n\t\t}\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (courses != props.courses) findSubjects()\r\n\t\t}, [findSubjects, setCourses, setSubjects]);\r\n\r\n\t\tif (courses.length > 0 && Object.keys(subjects).length > 0) {\r\n\t\t\tconsole.log('hi')\r\n\t\t\tconsole.log(courses)\r\n\t\t\treturn (\r\n\t\t\t\tObject.keys(courses).map((index) => (\r\n\t\t\t\t\t\t<Chip label={courses[index] + \" - \" + subjects[courses[index]]['course_name']}  onDelete={() => deleteSubject(courses[index])} color=\"primary\" style={{ marginRight: '0.5%' }} />\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<p>No Courses Completed...</p>\r\n\t\t\t)\r\n\t\t}\r\n \r\n}\r\n\r\nexport default CoursesCompleted;\r\n"]},"metadata":{},"sourceType":"module"}