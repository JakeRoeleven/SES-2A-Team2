{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\Frontend\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [subjects, setSubjects] = useState({});\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const fetchData = useCallback(async () => {\n    fetch('http://localhost:8080/api/subjects', {\n      crossDomain: true,\n      mode: 'cors',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        let json = await res.json();\n        setSubjects(json);\n      } else {\n        setError(true);\n        setErrorMessage('The application failed to get the subject list. Please try again later');\n      }\n    }).catch(err => {\n      setError(true);\n      setErrorMessage('The application failed to get the subject list. Please try again later');\n    });\n  }, []);\n  useEffect(() => {\n    if (Object.keys(subjects).length < 1000) fetchData();\n  }, [fetchData], subjects);\n\n  const Heading = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: \"xs=6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: \"xs=6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"2fmW5sVAII4gPQgVbopEIVr6EN8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/Frontend/src/pages/Search.js"],"names":["React","useState","useEffect","useCallback","CssBaseline","Typography","Container","Search","subjects","setSubjects","error","setError","errorMessage","setErrorMessage","fetchData","fetch","crossDomain","mode","method","headers","then","res","status","json","catch","err","Object","keys","length","Heading","classes","paper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMa,SAAS,GAAGX,WAAW,CAAC,YAAY;AACtCY,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,WAAW,EAAE,IAD2B;AAExCC,MAAAA,IAAI,EAAE,MAFkC;AAGxCC,MAAAA,MAAM,EAAE,KAHgC;AAIxCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AAJ+B,KAAvC,CAAL,CASKC,IATL,CASU,MAAOC,GAAP,IAAe;AACjB,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAIC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAjB;AACAd,QAAAA,WAAW,CAACc,IAAD,CAAX;AACH,OAHD,MAGO;AACHZ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,QAAAA,eAAe,CACX,wEADW,CAAf;AAGH;AACJ,KAnBL,EAoBKW,KApBL,CAoBYC,GAAD,IAAS;AACZd,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,eAAe,CACX,wEADW,CAAf;AAGH,KAzBL;AA0BH,GA3B4B,EA2B1B,EA3B0B,CAA7B;AA6BAX,EAAAA,SAAS,CACL,MAAM;AACF,QAAIwB,MAAM,CAACC,IAAP,CAAYnB,QAAZ,EAAsBoB,MAAtB,GAA+B,IAAnC,EAAyCd,SAAS;AACrD,GAHI,EAIL,CAACA,SAAD,CAJK,EAKLN,QALK,CAAT;;AAQA,QAAMqB,OAAO,GAAG,MAAM;AAClB,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACA,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEC,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAIF,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAED,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD;;AAaA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAArB;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAQH;;GA/DQxB,M;;KAAAA,M;AAiET,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Search() {\r\n    const [subjects, setSubjects] = useState({});\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        fetch('http://localhost:8080/api/subjects', {\r\n            crossDomain: true,\r\n            mode: 'cors',\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n        })\r\n            .then(async (res) => {\r\n                if (res.status === 200) {\r\n                    let json = await res.json();\r\n                    setSubjects(json);\r\n                } else {\r\n                    setError(true);\r\n                    setErrorMessage(\r\n                        'The application failed to get the subject list. Please try again later'\r\n                    );\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setError(true);\r\n                setErrorMessage(\r\n                    'The application failed to get the subject list. Please try again later'\r\n                );\r\n            });\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (Object.keys(subjects).length < 1000) fetchData();\r\n        },\r\n        [fetchData],\r\n        subjects\r\n    );\r\n\r\n    const Heading = () => {\r\n        return (\r\n            <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n            <Paper className={classes.paper}>xs=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Paper className={classes.paper}>xs=6</Paper>\r\n          </Grid>\r\n          </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Typography/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}