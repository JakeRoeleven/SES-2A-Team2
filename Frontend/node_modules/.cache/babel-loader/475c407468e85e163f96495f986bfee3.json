{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaker\\\\Desktop\\\\SES-2A-Team2\\\\frontend\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SearchHandler from '../lib/searchHandler.js';\nimport SubjectCard from '../components/SubjectCard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { AppContext } from '../AppContext';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from '../components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 32,\n    margin: 4\n  }\n}));\n\nfunction Search() {\n  _s();\n\n  const data = useContext(AppContext);\n  const classes = useStyles();\n  const [subjects, setSubjects] = useState({});\n  const [results, setResults] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // ALert related state\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  const searchSubjects = async () => {\n    if (searchValue.length > 1) {\n      setLoading(true);\n      setResults({});\n      let searchHandler = new SearchHandler(subjects);\n      let searchResults = await searchHandler.searchAllSubjects(searchValue);\n      setResults(searchResults);\n    } else {\n      setResults({});\n      setAlertMessage('Cannot search if input is empty!');\n      setShowAlert(true);\n    }\n  };\n\n  useEffect(() => {\n    setSubjects(data);\n  }, [data]); // \"Component that displays results or error messages\"\n\n  const ResultsDisplay = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (Object.keys(results).length < 1) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \" Use the search bar to find subjects by name or subject code... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this);\n    } else {\n      return Object.keys(results).slice(0, 5).map((subject, key) => /*#__PURE__*/_jsxDEV(SubjectCard, {\n        subject: results[subject]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              paddingTop: '10px'\n            },\n            children: \" Subject List Search \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          alignItems: 'flex-end',\n          alignContent: 'flex-end',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.search,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              component: \"form\",\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(InputBase, {\n                className: classes.input,\n                placeholder: \"Search Subjects\",\n                value: searchValue,\n                onChange: e => setSearchValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                className: classes.divider,\n                orientation: \"vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: searchSubjects,\n                className: classes.iconButton,\n                \"aria-label\": \"search\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      open: showAlert,\n      close: setShowAlert,\n      message: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"XeaqKLD8mmV6Kv+w0ZEtULqEHeE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/jaker/Desktop/SES-2A-Team2/frontend/src/pages/Search.js"],"names":["React","useState","useEffect","useContext","CssBaseline","Typography","Container","Grid","InputBase","makeStyles","SearchIcon","SearchHandler","SubjectCard","CircularProgress","AppContext","Paper","Divider","IconButton","Alert","useStyles","theme","root","padding","display","alignItems","marginLeft","width","input","spacing","flex","iconButton","divider","height","margin","Search","data","classes","subjects","setSubjects","results","setResults","searchValue","setSearchValue","loading","setLoading","loadingMessage","setLoadingMessage","errorMessage","setErrorMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","searchSubjects","length","searchHandler","searchResults","searchAllSubjects","ResultsDisplay","Object","keys","textAlign","slice","map","subject","key","paddingTop","search","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SearchHandler from '../lib/searchHandler.js';\r\nimport SubjectCard from '../components/SubjectCard';\r\nimport CircularProgress from  '@material-ui/core/CircularProgress';\r\n\r\nimport {AppContext} from '../AppContext';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Alert from '../components/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 'auto',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 32,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nfunction Search() {\r\n\r\n    const data = useContext(AppContext);\r\n    const classes = useStyles();\r\n\r\n    const [subjects, setSubjects] = useState({});\r\n    const [results, setResults] = useState({});\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingMessage, setLoadingMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // ALert related state\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const searchSubjects = async () => {\r\n\r\n        if (searchValue.length > 1) {\r\n            setLoading(true)\r\n            setResults({});\r\n            let searchHandler = new SearchHandler(subjects);\r\n            let searchResults = await searchHandler.searchAllSubjects(searchValue);\r\n            setResults(searchResults);\r\n        } else {\r\n            setResults({});\r\n            setAlertMessage('Cannot search if input is empty!')\r\n            setShowAlert(true)\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSubjects(data);\r\n    }, [data]);\r\n\r\n    // \"Component that displays results or error messages\"\r\n    const ResultsDisplay = () => {\r\n\r\n        if (loading) {\r\n            return (<CircularProgress />)\r\n        }\r\n        \r\n\r\n        if (Object.keys(results).length < 1) {\r\n            return  <p style={{textAlign: 'center'}}> Use the search bar to find subjects by name or subject code... </p>\r\n        } else {\r\n            return (\r\n                Object.keys(results).slice(0, 5).map((subject, key) => (\r\n                    <SubjectCard key={key} subject={results[subject]} />\r\n                ))\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container maxWidth={false}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Typography variant='h5' style={{ paddingTop: '10px' }}> Subject List Search </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} alignItems={'flex-end'} alignContent={'flex-end'}>\r\n                        <div className={classes.search}>\r\n                            <Paper component='form' className={classes.root}>\r\n                                <InputBase className={classes.input} placeholder='Search Subjects' value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n                                <Divider className={classes.divider} orientation='vertical' />\r\n                                <IconButton onClick={searchSubjects} className={classes.iconButton} aria-label='search'>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <ResultsDisplay />\r\n            </Container>\r\n            <Alert open={showAlert} close={setShowAlert} message={alertMessage} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}